{
  "metadata": {
    "generated_at": "2025-08-14T23:55:05.716Z",
    "version": "1.0.0",
    "total_files": 284,
    "project_name": "POWLAX React App",
    "framework": "Next.js 14.2.5",
    "database": "Supabase PostgreSQL",
    "last_updated_by": "project-indexer-hook"
  },
  "architecture": {
    "framework": "Next.js 14 App Router",
    "ui_library": "Tailwind CSS + Shadcn/UI",
    "database": "Supabase PostgreSQL (62 tables)",
    "authentication": "Supabase Auth (Magic Links)",
    "state_management": "TanStack React Query",
    "testing": "Playwright E2E",
    "deployment": "Vercel"
  },
  "critical_rules": {
    "database_tables": {
      "use_powlax_prefix": "powlax_drills, powlax_strategies (NOT drills, strategies)",
      "actual_table_names": [
        "users",
        "practices",
        "clubs",
        "teams",
        "team_members"
      ],
      "never_use": [
        "user_profiles",
        "practice_plans",
        "organizations",
        "drills",
        "strategies"
      ]
    },
    "no_mock_data_policy": "ABSOLUTELY NO hardcoded mock data - use real data or (MOCK) labeled test data",
    "server_requirements": "MUST run dev server on port 3002",
    "ai_safety": "Read AI_FRAMEWORK_ERROR_PREVENTION.md before any changes"
  },
  "database": {
    "total_tables": 62,
    "key_tables": {
      "skills_academy_series": {
        "records": 49,
        "purpose": "Workout series definitions"
      },
      "skills_academy_workouts": {
        "records": 166,
        "purpose": "Workout definitions with drill_ids column"
      },
      "skills_academy_drills": {
        "records": 167,
        "purpose": "PRIMARY drill library"
      },
      "powlax_drills": {
        "records": 135,
        "purpose": "Main POWLAX drill library"
      },
      "powlax_strategies": {
        "records": 220,
        "purpose": "Strategy library"
      },
      "practices": {
        "records": 34,
        "purpose": "THE REAL practice plans table"
      },
      "users": {
        "records": 14,
        "purpose": "Main user table (NOT user_profiles)"
      },
      "teams": {
        "records": 14,
        "purpose": "Team entities"
      },
      "clubs": {
        "records": 3,
        "purpose": "Organization level (NOT organizations)"
      }
    },
    "relationships": {
      "workouts_to_drills": "Use drill_ids column, NOT junction tables",
      "users_to_teams": "team_members table",
      "teams_to_clubs": "club_id foreign key"
    }
  },
  "file_structure": {
    "src/app": {
      "type": "directory",
      "purpose": "Next.js App Router pages",
      "key_routes": {
        "(authenticated)": "Protected routes with auth layout",
        "api": "Server-side API endpoints",
        "page.tsx": "Public landing page"
      }
    },
    "src/components": {
      "type": "directory",
      "purpose": "React components organized by domain",
      "subdirectories": {
        "ui": "17 Shadcn/UI base components",
        "practice-planner": "Practice planning system components",
        "skills-academy": "Skills training components",
        "dashboards": "Role-specific dashboard components",
        "teams": "Team management components",
        "navigation": "Mobile/desktop navigation components"
      }
    },
    "src/hooks": {
      "type": "directory",
      "purpose": "Custom React hooks with TanStack Query",
      "key_hooks": {
        "useDrills": "Fetches from powlax_drills + user_drills",
        "useStrategies": "Fetches from powlax_strategies + user_strategies",
        "usePointsCalculation": "Skills Academy points system",
        "useProgressTracking": "Workout progress tracking"
      }
    },
    "src/lib": {
      "type": "directory",
      "purpose": "Utility libraries and configurations",
      "key_files": {
        "supabase.ts": "Client-side Supabase client",
        "supabase-server.ts": "Server-side Supabase client",
        "utils.ts": "General utility functions"
      }
    }
  },
  "components": {
    "src/components/admin/BulkOperationsPanel.tsx": {
      "path": "src/components/admin/BulkOperationsPanel.tsx",
      "purpose": "Filters",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "sonner",
        "@/hooks/useBulkUserOperations"
      ],
      "exports": [
        "BulkOperationsPanel"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onImportCSV",
        "onExportCSV"
      ],
      "hooks_used": [
        "useBulkUserOperations",
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/CSVExportPanel.tsx": {
      "path": "src/components/admin/CSVExportPanel.tsx",
      "purpose": "Export Scope",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "lucide-react",
        "sonner",
        "@/lib/csv/user-import-export"
      ],
      "exports": [
        "CSVExportPanel"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "selectedUserIds",
        "totalUsers"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/CSVImportPanel.tsx": {
      "path": "src/components/admin/CSVImportPanel.tsx",
      "purpose": "Progress Steps",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/dialog",
        "lucide-react",
        "sonner",
        "@/lib/csv/user-import-export"
      ],
      "exports": [
        "CSVImportPanel"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onImportComplete",
        "result"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/CompleteUserEditor.tsx": {
      "path": "src/components/admin/CompleteUserEditor.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "sonner",
        "lucide-react",
        "./user-editor/ProfileTab",
        "./user-editor/AuthenticationTab",
        "./user-editor/MembershipTab",
        "./user-editor/TeamTab",
        "./user-editor/FamilyTab",
        "./user-editor/ActivityTab"
      ],
      "exports": [
        "CompleteUserEditor"
      ],
      "database_tables": [
        "users",
        "user_auth_status",
        "user_sessions",
        "magic_links",
        "membership_entitlements",
        "membership_products",
        "team_members",
        "clubs",
        "parent_child_relationships",
        "family_accounts",
        "user_points_wallets",
        "user_badges",
        "skills_academy_user_progress",
        "user_activity_log"
      ],
      "type": "client",
      "props": [
        "userId",
        "isOpen",
        "onClose",
        "onUserUpdated"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/MagicLinkPanel.tsx": {
      "path": "src/components/admin/MagicLinkPanel.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/table",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "MagicLinkPanel"
      ],
      "database_tables": [
        "magic_links"
      ],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/MemberpressStatusPanel.tsx": {
      "path": "src/components/admin/MemberpressStatusPanel.tsx",
      "purpose": "MemberpressStatusPanel Component",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "MemberpressStatusPanel"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/MembershipCapabilityDisplay.tsx": {
      "path": "src/components/admin/MembershipCapabilityDisplay.tsx",
      "purpose": "MembershipCapabilityDisplay Component",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/collapsible",
        "@/hooks/useMembershipCapabilities",
        "@/lib/membership/product-hierarchy",
        "lucide-react"
      ],
      "exports": [
        "MembershipCapabilityDisplay"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userId",
        "showProducts",
        "showCapabilities",
        "showExpiration",
        "showSources",
        "compact"
      ],
      "hooks_used": [
        "useState",
        "useMembershipCapabilities"
      ]
    },
    "src/components/admin/RoleViewerSelector.tsx": {
      "path": "src/components/admin/RoleViewerSelector.tsx",
      "purpose": "Viewing As Badge",
      "imports": [
        "@/contexts/SupabaseAuthContext",
        "@/contexts/RoleViewerContext",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "react"
      ],
      "exports": [
        "RoleViewerSelector",
        "RoleViewerKeyboardHandler"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useAuth",
        "useRoleViewer",
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/SessionManagementPanel.tsx": {
      "path": "src/components/admin/SessionManagementPanel.tsx",
      "purpose": "Stats Overview",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/table",
        "@/components/ui/badge",
        "lucide-react",
        "sonner",
        "@/lib/supabase"
      ],
      "exports": [
        "SessionManagementPanel"
      ],
      "database_tables": [
        "user_sessions",
        "user_activity_log"
      ],
      "type": "client",
      "props": [
        "userId",
        "compact"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/admin/management/DocumentationHelper.tsx": {
      "path": "src/components/admin/management/DocumentationHelper.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "lucide-react",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "DocumentationHelper",
        "InlineDocumentation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "feature",
        "compact",
        "showRelationships"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/management/ManagementTabs.tsx": {
      "path": "src/components/admin/management/ManagementTabs.tsx",
      "purpose": "Roles & Permissions Tab - Contains existing role management",
      "imports": [
        "@/components/ui/tabs",
        "@/components/ui/card",
        "lucide-react",
        "./UsersTabContent",
        "../MemberpressStatusPanel",
        "../MagicLinkPanel",
        "./DocumentationHelper",
        "../platform/ClubsManagementTab",
        "../platform/TeamHQManagementTab",
        "../platform/CoachingKitManagementTab",
        "../platform/PlatformAnalyticsDashboard"
      ],
      "exports": [
        "ManagementTabs"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "children",
        "defaultTab"
      ],
      "hooks_used": []
    },
    "src/components/admin/management/UsersTabContent.tsx": {
      "path": "src/components/admin/management/UsersTabContent.tsx",
      "purpose": "Documentation Helper",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/badge",
        "lucide-react",
        "sonner",
        "@/components/admin/MembershipCapabilityDisplay",
        "./DocumentationHelper",
        "@/components/admin/CompleteUserEditor",
        "@/components/admin/BulkOperationsPanel",
        "@/components/admin/CSVImportPanel",
        "@/components/admin/CSVExportPanel",
        "@/hooks/useMagicLinkManagement"
      ],
      "exports": [
        "UsersTabContent"
      ],
      "database_tables": [
        "users"
      ],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "useMagicLinkManagement",
        "useEffect"
      ]
    },
    "src/components/admin/platform/ClubsManagementTab.tsx": {
      "path": "src/components/admin/platform/ClubsManagementTab.tsx",
      "purpose": "Documentation Helper",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/useClubsManagement",
        "@/lib/platform/tier-enforcement",
        "../management/DocumentationHelper"
      ],
      "exports": [
        "ClubsManagementTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useClubsManagement",
        "useState"
      ]
    },
    "src/components/admin/platform/CoachingKitManagementTab.tsx": {
      "path": "src/components/admin/platform/CoachingKitManagementTab.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/useCoachingKitManagement"
      ],
      "exports": [
        "CoachingKitManagementTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useCoachingKitManagement",
        "useState"
      ]
    },
    "src/components/admin/platform/PlatformAnalyticsDashboard.tsx": {
      "path": "src/components/admin/platform/PlatformAnalyticsDashboard.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/usePlatformAnalytics"
      ],
      "exports": [
        "PlatformAnalyticsDashboard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "usePlatformAnalytics"
      ]
    },
    "src/components/admin/platform/TeamHQManagementTab.tsx": {
      "path": "src/components/admin/platform/TeamHQManagementTab.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/useTeamHQManagement",
        "@/lib/platform/tier-enforcement"
      ],
      "exports": [
        "TeamHQManagementTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useTeamHQManagement",
        "useState"
      ]
    },
    "src/components/admin/user-editor/ActivityTab.tsx": {
      "path": "src/components/admin/user-editor/ActivityTab.tsx",
      "purpose": "Points Overview",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/components/ui/table",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "ActivityTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/user-editor/AuthenticationTab.tsx": {
      "path": "src/components/admin/user-editor/AuthenticationTab.tsx",
      "purpose": "Authentication Status",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/table",
        "lucide-react",
        "sonner",
        "@/components/admin/MagicLinkPanel",
        "@/components/admin/SessionManagementPanel"
      ],
      "exports": [
        "AuthenticationTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "userId",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/user-editor/FamilyTab.tsx": {
      "path": "src/components/admin/user-editor/FamilyTab.tsx",
      "purpose": "Family Account Overview",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/avatar",
        "@/components/ui/table",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "FamilyTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/user-editor/MembershipTab.tsx": {
      "path": "src/components/admin/user-editor/MembershipTab.tsx",
      "purpose": "Current Memberships",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/table",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "MembershipTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/user-editor/ProfileTab.tsx": {
      "path": "src/components/admin/user-editor/ProfileTab.tsx",
      "purpose": "Basic Profile Information",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "lucide-react"
      ],
      "exports": [
        "ProfileTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/admin/user-editor/TeamTab.tsx": {
      "path": "src/components/admin/user-editor/TeamTab.tsx",
      "purpose": "Current Team Memberships",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/table",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "TeamTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userData",
        "onFieldChange",
        "tab",
        "field",
        "oldValue",
        "newValue"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/animations/AnimationShowcase.tsx": {
      "path": "src/components/animations/AnimationShowcase.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "./BadgeUnlockCSS",
        "./BadgeCollectionSpring",
        "./PointExplosionCanvas",
        "./SkillTreeSVG",
        "./ComboSystemFire",
        "./PowerUpWebGL",
        "./TeamChallengeRacing"
      ],
      "exports": [
        "AnimationShowcase"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/animations/BadgeCollectionSpring.tsx": {
      "path": "src/components/animations/BadgeCollectionSpring.tsx",
      "purpose": "Collection Zone",
      "imports": [
        "react",
        "@react-spring/web",
        "@use-gesture/react"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "badges",
        "onCollect",
        "badge",
        "onBadgeSelect",
        "badge"
      ],
      "hooks_used": [
        "useState",
        "useSpring",
        "useSprings",
        "useDrag"
      ]
    },
    "src/components/animations/BadgeUnlockCSS.tsx": {
      "path": "src/components/animations/BadgeUnlockCSS.tsx",
      "purpose": "Background burst effect",
      "imports": [
        "react"
      ],
      "exports": [
        "BadgeUnlockCSS"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "badgeName",
        "badgeImage",
        "category",
        "onComplete"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/animations/ComboSystemFire.tsx": {
      "path": "src/components/animations/ComboSystemFire.tsx",
      "purpose": "Fire particles canvas",
      "imports": [
        "react",
        "@react-spring/web"
      ],
      "exports": [
        "ComboSystemFire",
        "ComboSystemDemo"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "comboCount",
        "multiplier",
        "comboType",
        "onComboEnd",
        "maxComboTime"
      ],
      "hooks_used": [
        "useState",
        "useRef",
        "useSpring",
        "useTransition",
        "useCallback",
        "useEffect"
      ]
    },
    "src/components/animations/OptimizedAnimationShowcase.tsx": {
      "path": "src/components/animations/OptimizedAnimationShowcase.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "./BadgeUnlockCSS",
        "./PointExplosionCanvas"
      ],
      "exports": [
        "OptimizedAnimationShowcase"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/animations/PointExplosionCanvas.tsx": {
      "path": "src/components/animations/PointExplosionCanvas.tsx",
      "purpose": "Point Text Display",
      "imports": [
        "react"
      ],
      "exports": [
        "PointExplosionDemo"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "points",
        "pointType",
        "triggerExplosion",
        "x",
        "y",
        "onComplete"
      ],
      "hooks_used": [
        "useState",
        "useCallback",
        "useEffect"
      ]
    },
    "src/components/animations/PowerUpWebGL.tsx": {
      "path": "src/components/animations/PowerUpWebGL.tsx",
      "purpose": "WebGL Canvas",
      "imports": [
        "react",
        "@react-three/fiber",
        "@react-three/drei",
        "three"
      ],
      "exports": [
        "PowerUpWebGL",
        "PowerUpWebGLDemo"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "powerType",
        "isActive",
        "intensity",
        "powerType",
        "isActive",
        "duration",
        "onComplete"
      ],
      "hooks_used": [
        "useThree",
        "useFrame",
        "useMemo",
        "useState",
        "useEffect"
      ]
    },
    "src/components/animations/SimpleAnimationShowcase.tsx": {
      "path": "src/components/animations/SimpleAnimationShowcase.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "./PointExplosionCanvas"
      ],
      "exports": [
        "SimpleAnimationShowcase"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/animations/SkillTreeSVG.tsx": {
      "path": "src/components/animations/SkillTreeSVG.tsx",
      "purpose": "Grid pattern background",
      "imports": [
        "react",
        "@react-spring/web"
      ],
      "exports": [
        "SkillTreeSVG",
        "SkillTreeDemo"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "nodes",
        "connections",
        "onNodeClick",
        "node",
        "selectedNode"
      ],
      "hooks_used": [
        "useEffect",
        "useSpring"
      ]
    },
    "src/components/animations/TeamChallengeRacing.tsx": {
      "path": "src/components/animations/TeamChallengeRacing.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@react-spring/web"
      ],
      "exports": [
        "TeamChallengeRacing",
        "TeamChallengeDemo"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "teams",
        "challengeGoal",
        "challengeName",
        "timeRemaining",
        "milestones",
        "onTeamClick",
        "team"
      ],
      "hooks_used": [
        "useEffect",
        "useSprings",
        "useSpring",
        "useTransition",
        "useState"
      ]
    },
    "src/components/animations/lazy/LazyBadgeCollection.tsx": {
      "path": "src/components/animations/lazy/LazyBadgeCollection.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next/dynamic",
        "react"
      ],
      "exports": [
        "LazyBadgeCollection"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "badges",
        "onCollect",
        "badge",
        "onBadgeSelect",
        "badge"
      ],
      "hooks_used": []
    },
    "src/components/animations/lazy/LazyPointExplosion.tsx": {
      "path": "src/components/animations/lazy/LazyPointExplosion.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next/dynamic",
        "react"
      ],
      "exports": [
        "LazyPointExplosion"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "points",
        "pointType",
        "triggerExplosion",
        "x",
        "y",
        "onComplete"
      ],
      "hooks_used": []
    },
    "src/components/common/FloatingActionButton.tsx": {
      "path": "src/components/common/FloatingActionButton.tsx",
      "purpose": "Quick Action Items",
      "imports": [
        "react",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "FloatingActionButton"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "className"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/common/LoadingSpinner.tsx": {
      "path": "src/components/common/LoadingSpinner.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "size",
        "className"
      ],
      "hooks_used": []
    },
    "src/components/common/OfflineIndicator.tsx": {
      "path": "src/components/common/OfflineIndicator.tsx",
      "purpose": "Offline Indicator",
      "imports": [
        "@/hooks/useServiceWorker",
        "lucide-react",
        "react"
      ],
      "exports": [
        "OfflineIndicator"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useServiceWorker",
        "useState"
      ]
    },
    "src/components/dashboards/ActionCard.tsx": {
      "path": "src/components/dashboards/ActionCard.tsx",
      "purpose": "Card component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "ActionCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "title",
        "description",
        "href",
        "icon",
        "color",
        "buttonText",
        "disabled"
      ],
      "hooks_used": []
    },
    "src/components/dashboards/AdminDashboard.tsx": {
      "path": "src/components/dashboards/AdminDashboard.tsx",
      "purpose": "Welcome Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./StatCard",
        "./ActionCard",
        "./ProgressCard",
        "./ScheduleCard",
        "lucide-react",
        "next/link",
        "@/lib/supabase"
      ],
      "exports": [
        "AdminDashboard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "user"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/dashboards/CoachDashboard.tsx": {
      "path": "src/components/dashboards/CoachDashboard.tsx",
      "purpose": "Add Favorites Section",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useDashboardFavorites",
        "@/hooks/useDrills",
        "@/hooks/useStrategies"
      ],
      "exports": [
        "CoachDashboard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useDashboardFavorites",
        "useDrills",
        "useStrategies",
        "useState"
      ]
    },
    "src/components/dashboards/DirectorDashboard.tsx": {
      "path": "src/components/dashboards/DirectorDashboard.tsx",
      "purpose": "Welcome Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./StatCard",
        "./ActionCard",
        "./ProgressCard",
        "./ScheduleCard",
        "lucide-react",
        "next/link",
        "@/lib/supabase"
      ],
      "exports": [
        "DirectorDashboard"
      ],
      "database_tables": [
        "clubs",
        "teams"
      ],
      "type": "client",
      "props": [
        "user"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/dashboards/ParentDashboard.tsx": {
      "path": "src/components/dashboards/ParentDashboard.tsx",
      "purpose": "Parent Resources Card",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "ParentDashboard"
      ],
      "database_tables": [
        "parent_child_relationships"
      ],
      "type": "client",
      "props": [
        "user"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/dashboards/PlayerDashboard.tsx": {
      "path": "src/components/dashboards/PlayerDashboard.tsx",
      "purpose": "Welcome Header",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./StatCard",
        "./ActionCard",
        "./ProgressCard",
        "./ScheduleCard",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "PlayerDashboard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "user"
      ],
      "hooks_used": []
    },
    "src/components/dashboards/ProgressCard.tsx": {
      "path": "src/components/dashboards/ProgressCard.tsx",
      "purpose": "Card component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "ProgressCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "title",
        "description",
        "items",
        "icon",
        "showBadges"
      ],
      "hooks_used": []
    },
    "src/components/dashboards/PublicDashboard.tsx": {
      "path": "src/components/dashboards/PublicDashboard.tsx",
      "purpose": "Hero Section",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./ActionCard",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "PublicDashboard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": []
    },
    "src/components/dashboards/ScheduleCard.tsx": {
      "path": "src/components/dashboards/ScheduleCard.tsx",
      "purpose": "Card component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "ScheduleCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "title",
        "description",
        "events",
        "icon",
        "maxEvents",
        "showMoreHref"
      ],
      "hooks_used": []
    },
    "src/components/dashboards/StatCard.tsx": {
      "path": "src/components/dashboards/StatCard.tsx",
      "purpose": "Card component",
      "imports": [
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "StatCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "title",
        "value",
        "subtitle",
        "icon",
        "color",
        "trend",
        "value",
        "label"
      ],
      "hooks_used": []
    },
    "src/components/dashboards/index.ts": {
      "path": "src/components/dashboards/index.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/details/DrillDetails.tsx": {
      "path": "src/components/details/DrillDetails.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [
        "DrillDetails"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": []
    },
    "src/components/details/StrategyDetails.tsx": {
      "path": "src/components/details/StrategyDetails.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [
        "StrategyDetails"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": []
    },
    "src/components/gamification/DifficultyIndicator.tsx": {
      "path": "src/components/gamification/DifficultyIndicator.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "DifficultyIndicator",
        "AverageDifficulty",
        "DifficultyBadge",
        "DifficultyProgressBar"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "score",
        "size",
        "showLabel",
        "className",
        "averageScore",
        "totalDrills",
        "size",
        "className",
        "score",
        "className",
        "currentDifficulty",
        "targetDifficulty",
        "className"
      ],
      "hooks_used": []
    },
    "src/components/gamification/StreakCounter.tsx": {
      "path": "src/components/gamification/StreakCounter.tsx",
      "purpose": "Milestone Progress",
      "imports": [
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "StreakCounter",
        "CompactStreak",
        "MilestoneCelebration",
        "StreakStats"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "currentStreak",
        "longestStreak",
        "streakTitle",
        "freezesRemaining",
        "milestoneProgress",
        "next",
        "progress",
        "remaining",
        "streak",
        "className",
        "milestone",
        "isNew",
        "className",
        "currentStreak",
        "longestStreak",
        "totalWorkouts",
        "className"
      ],
      "hooks_used": []
    },
    "src/components/navigation/BottomNavigation.tsx": {
      "path": "src/components/navigation/BottomNavigation.tsx",
      "purpose": "Navigation items - shown when expanded",
      "imports": [
        "next/link",
        "next/navigation",
        "react",
        "lucide-react"
      ],
      "exports": [
        "BottomNavigation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "usePathname",
        "useState"
      ]
    },
    "src/components/navigation/SidebarNavigation.tsx": {
      "path": "src/components/navigation/SidebarNavigation.tsx",
      "purpose": "Toggle Button - Above Logo",
      "imports": [
        "next/link",
        "next/navigation",
        "lucide-react",
        "@/contexts/SupabaseAuthContext",
        "@/contexts/RoleViewerContext",
        "@/hooks/useViewAsAuth",
        "@/contexts/SidebarContext",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/search/SearchTrigger",
        "@/components/theme/ThemeToggle",
        "next/image"
      ],
      "exports": [
        "SidebarNavigation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "usePathname",
        "useAuth",
        "useViewAsAuth",
        "useRoleViewer",
        "useSidebar"
      ]
    },
    "src/components/onboarding/TourOverlay.tsx": {
      "path": "src/components/onboarding/TourOverlay.tsx",
      "purpose": "Backdrop with cutout for highlighted element",
      "imports": [
        "react",
        "lucide-react",
        "@/contexts/OnboardingContext",
        "@/components/ui/button"
      ],
      "exports": [
        "TourOverlay"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useOnboarding",
        "useState",
        "useEffect"
      ]
    },
    "src/components/onboarding/WelcomeModal.tsx": {
      "path": "src/components/onboarding/WelcomeModal.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "lucide-react",
        "@/contexts/OnboardingContext",
        "@/components/ui/button"
      ],
      "exports": [
        "WelcomeModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose"
      ],
      "hooks_used": [
        "useOnboarding"
      ]
    },
    "src/components/practice-planner/ActiveStrategiesSection.tsx": {
      "path": "src/components/practice-planner/ActiveStrategiesSection.tsx",
      "purpose": "Strategy Content",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ActiveStrategiesSection"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "strategies",
        "onRemove",
        "id",
        "onStrategyClick",
        "strategy"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/AdminDemo.tsx": {
      "path": "src/components/practice-planner/AdminDemo.tsx",
      "purpose": "Demo Drill Card",
      "imports": [
        "react",
        "@/contexts/SupabaseAuthContext",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./modals/AdminEditModal",
        "./AdminToolbar",
        "@/lib/adminPermissions",
        "lucide-react"
      ],
      "exports": [
        "AdminDemo"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": [
        "useAuth",
        "useState"
      ]
    },
    "src/components/practice-planner/AdminToolbar.tsx": {
      "path": "src/components/practice-planner/AdminToolbar.tsx",
      "purpose": "AdminToolbar - Shows edit buttons only to admin users",
      "imports": [
        "lucide-react",
        "@/lib/adminPermissions",
        "@/components/ui/button"
      ],
      "exports": [
        "AdminToolbar",
        "AdminToolbarInline",
        "AdminToolbarFloating"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "user",
        "itemType",
        "item",
        "id",
        "source",
        "name",
        "strategy_name"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/DrillCard.tsx": {
      "path": "src/components/practice-planner/DrillCard.tsx",
      "purpose": "Individual drill trash icon",
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [],
      "database_tables": [],
      "type": "client",
      "props": [
        "drill",
        "id",
        "title",
        "duration_minutes",
        "notes",
        "videoUrl",
        "video_url",
        "labUrl",
        "lab_urls",
        "lacrosse_lab_urls",
        "drill_lab_url_1",
        "drill_lab_url_2",
        "drill_lab_url_3",
        "drill_lab_url_4",
        "drill_lab_url_5",
        "imageUrls",
        "strategies",
        "concepts",
        "skills",
        "custom_url",
        "coach_instructions",
        "source"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/DrillLibrary.tsx": {
      "path": "src/components/practice-planner/DrillLibrary.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "lucide-react",
        "@/hooks/useDrills",
        "@/hooks/useFavorites",
        "./AddCustomDrillModal",
        "./FilterDrillsModal",
        "./modals/VideoModal",
        "./modals/LinksModal",
        "./modals/StrategiesModal",
        "./modals/LacrosseLabModal",
        "./modals/AddCustomStrategiesModal"
      ],
      "exports": [
        "DrillLibrary"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onAddDrill",
        "drill"
      ],
      "hooks_used": [
        "useDrills",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/DrillLibraryContent.tsx": {
      "path": "src/components/practice-planner/DrillLibraryContent.tsx",
      "purpose": "Mobile checkbox",
      "imports": [
        "react",
        "lucide-react",
        "sonner",
        "@/hooks/useDrills",
        "@/hooks/useFavorites",
        "./modals/AddCustomDrillModal",
        "./FilterDrillsModal",
        "./modals/VideoModal",
        "./modals/LinksModal",
        "./modals/StrategiesModal",
        "./modals/LacrosseLabModal",
        "./modals/StudyDrillModal"
      ],
      "exports": [
        "DrillLibraryContent"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onAddDrill",
        "drill",
        "isMobile",
        "user"
      ],
      "hooks_used": [
        "useDrills",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/DrillLibraryTabbed.tsx": {
      "path": "src/components/practice-planner/DrillLibraryTabbed.tsx",
      "purpose": "Title row with Plus button on left",
      "imports": [
        "react",
        "lucide-react",
        "sonner",
        "@/hooks/useDrills",
        "@/hooks/useFavorites",
        "@/components/ui/tabs",
        "./modals/AddCustomDrillModal",
        "./FilterDrillsModal",
        "./modals/VideoModal",
        "./modals/LinksModal",
        "./modals/StrategiesModal",
        "./modals/LacrosseLabModal",
        "./modals/StudyDrillModal",
        "./StrategiesTab"
      ],
      "exports": [
        "DrillLibraryTabbed"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onAddDrill",
        "drill",
        "onSelectStrategy",
        "strategy",
        "selectedStrategies",
        "isMobile",
        "user"
      ],
      "hooks_used": [
        "useDrills",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/DrillSelectionAccordion.tsx": {
      "path": "src/components/practice-planner/DrillSelectionAccordion.tsx",
      "purpose": "Selected Drills Accordion",
      "imports": [
        "react",
        "@/components/ui/checkbox",
        "@/components/ui/button",
        "@/components/ui/accordion",
        "@/components/ui/badge",
        "lucide-react",
        "./modals/VideoModal",
        "./modals/LinksModal",
        "./modals/StrategiesModal",
        "./modals/LacrosseLabModal"
      ],
      "exports": [
        "DrillSelectionAccordion"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "drills",
        "onAddSelectedDrills",
        "drills",
        "onToggleFavorite",
        "drillId",
        "favorites"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/FieldModeView.tsx": {
      "path": "src/components/practice-planner/FieldModeView.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "FieldModeView"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "timeSlots",
        "practiceTitle",
        "onExit"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/FilterDrillsModal.tsx": {
      "path": "src/components/practice-planner/FilterDrillsModal.tsx",
      "purpose": "Strategies",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/scroll-area",
        "@/hooks/useDrills"
      ],
      "exports": [
        "FilterDrillsModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "drills",
        "selectedStrategies",
        "setSelectedStrategies",
        "strategies",
        "selectedSkills",
        "setSelectedSkills",
        "skills",
        "selectedGamePhase",
        "setSelectedGamePhase",
        "phase",
        "selectedDuration",
        "min",
        "max"
      ],
      "hooks_used": [
        "useDrills",
        "useEffect"
      ]
    },
    "src/components/practice-planner/ParallelDrillPicker.tsx": {
      "path": "src/components/practice-planner/ParallelDrillPicker.tsx",
      "purpose": "Title row with Plus button on left",
      "imports": [
        "react",
        "lucide-react",
        "@/hooks/useDrills",
        "@/hooks/useFavorites",
        "./modals/StudyDrillModal"
      ],
      "exports": [
        "ParallelDrillPicker"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onSelect",
        "drill",
        "existingDrills"
      ],
      "hooks_used": [
        "useDrills",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/PracticeDurationBar.tsx": {
      "path": "src/components/practice-planner/PracticeDurationBar.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "totalDuration",
        "usedDuration"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/PracticePlannerMain.tsx": {
      "path": "src/components/practice-planner/PracticePlannerMain.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "lucide-react",
        "@/components/practice-planner/DrillLibraryTabbed",
        "@/components/practice-planner/StrategyCard",
        "@/components/ui/accordion",
        "@/components/practice-planner/PracticeTimelineWithParallel",
        "@/components/practice-planner/PracticeDurationBar",
        "@/components/practice-planner/modals/SavePracticeModal",
        "@/components/practice-planner/modals/LoadPracticeModal",
        "@/components/practice-planner/modals/StrategiesListModal",
        "@/components/practice-planner/PrintablePracticePlan",
        "@/components/practice-planner/PracticeTemplateSelector",
        "@/components/practice-planner/ActiveStrategiesSection",
        "@/components/practice-planner/modals/StudyDrillModal",
        "@/components/practice-planner/modals/StudyStrategyModal",
        "@/hooks/usePracticePlans",
        "@/hooks/useDrills",
        "@/hooks/usePrint",
        "@/hooks/useStrategies",
        "@/contexts/SupabaseAuthContext",
        "sonner"
      ],
      "exports": [
        "PracticePlannerMain"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "teamId",
        "teamName"
      ],
      "hooks_used": [
        "useAuth",
        "usePracticePlans",
        "useDrills",
        "usePrint",
        "useStrategies",
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/PracticeScheduleCard.tsx": {
      "path": "src/components/practice-planner/PracticeScheduleCard.tsx",
      "purpose": "Date",
      "imports": [
        "lucide-react",
        "@/components/ui/accordion"
      ],
      "exports": [
        "PracticeScheduleCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "practiceDate",
        "setPracticeDate",
        "date",
        "startTime",
        "setStartTime",
        "time",
        "duration",
        "setDuration",
        "duration",
        "field",
        "setField",
        "field",
        "addSetupTime",
        "setAddSetupTime",
        "add",
        "setupDuration",
        "setSetupDuration",
        "duration",
        "practiceNotes",
        "setPracticeNotes",
        "notes"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/PracticeTemplateSelector.tsx": {
      "path": "src/components/practice-planner/PracticeTemplateSelector.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "lucide-react",
        "next/dynamic",
        "@/hooks/usePracticeTemplates",
        "@/components/ui/button"
      ],
      "exports": [
        "PracticeTemplateSelector"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onSelectTemplate",
        "template"
      ],
      "hooks_used": [
        "usePracticeTemplates"
      ]
    },
    "src/components/practice-planner/PracticeTimeline.tsx": {
      "path": "src/components/practice-planner/PracticeTimeline.tsx",
      "purpose": "TODO: Implement parallel drills",
      "imports": [
        "./DrillCard"
      ],
      "exports": [
        "PracticeTimeline"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "drills",
        "setDrills",
        "drills",
        "startTime",
        "setupTime"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/PracticeTimelineWithParallel.tsx": {
      "path": "src/components/practice-planner/PracticeTimelineWithParallel.tsx",
      "purpose": "Duration Progress Bar - Between setup time and drills",
      "imports": [
        "./DrillCard",
        "./ParallelDrillPicker",
        "./modals/SetupTimeModal",
        "./PracticeDurationBar",
        "react",
        "lucide-react"
      ],
      "exports": [
        "PracticeTimelineWithParallel"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "drills",
        "setDrills",
        "drills",
        "startTime",
        "setupTime",
        "setupNotes",
        "onSetupNotesChange",
        "notes",
        "onStudyDrill",
        "drill",
        "totalDuration",
        "usedDuration"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/PrintablePracticePlan.tsx": {
      "path": "src/components/practice-planner/PrintablePracticePlan.tsx",
      "purpose": "POWLAX Header with New Branding",
      "imports": [
        "date-fns"
      ],
      "exports": [
        "PrintablePracticePlan"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "practiceDate",
        "startTime",
        "duration",
        "field",
        "setupTime",
        "setupNotes",
        "timeSlots",
        "practiceNotes",
        "coachName",
        "teamName",
        "selectedStrategies"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/SidebarLibrary.tsx": {
      "path": "src/components/practice-planner/SidebarLibrary.tsx",
      "purpose": "FIXED TOGGLE BUTTONS - NEVER MOVE",
      "imports": [
        "react",
        "./DrillLibraryContent",
        "./StrategiesLibraryContent"
      ],
      "exports": [
        "SidebarLibrary"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onAddDrill",
        "drill",
        "onRemoveDrill",
        "drillId",
        "onSelectStrategy",
        "strategy",
        "selectedStrategies",
        "isMobile",
        "user"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/StrategiesLibraryContent.tsx": {
      "path": "src/components/practice-planner/StrategiesLibraryContent.tsx",
      "purpose": "Action buttons",
      "imports": [
        "react",
        "lucide-react",
        "sonner",
        "@/hooks/useStrategies",
        "@/hooks/useFavorites",
        "@/contexts/SupabaseAuthContext",
        "./modals/AddCustomStrategiesModal",
        "./modals/FilterStrategiesModal",
        "./modals/VideoModal",
        "./modals/LacrosseLabModal",
        "./modals/StudyStrategyModal",
        "@/components/team-playbook/SaveToPlaybookModal"
      ],
      "exports": [
        "StrategiesLibraryContent"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onSelectStrategy",
        "strategy",
        "selectedStrategies",
        "isMobile",
        "user"
      ],
      "hooks_used": [
        "useStrategies",
        "useAuth",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/StrategiesTab.tsx": {
      "path": "src/components/practice-planner/StrategiesTab.tsx",
      "purpose": "Header - matching Drill Library",
      "imports": [
        "react",
        "lucide-react",
        "@/hooks/useStrategies",
        "@/contexts/SupabaseAuthContext",
        "@/hooks/useFavorites",
        "sonner",
        "./modals/VideoModal",
        "./modals/LacrosseLabModal",
        "./modals/AddCustomStrategiesModal",
        "./modals/StudyStrategyModal",
        "./modals/FilterStrategiesModal",
        "@/components/team-playbook/SaveToPlaybookModal",
        "./AdminToolbar",
        "./modals/AdminEditModal"
      ],
      "exports": [
        "StrategiesTab"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onSelectStrategy",
        "strategy",
        "selectedStrategies",
        "isMobile",
        "user"
      ],
      "hooks_used": [
        "useStrategies",
        "useAuth",
        "useFavorites",
        "useState",
        "useMemo"
      ]
    },
    "src/components/practice-planner/StrategyCard.tsx": {
      "path": "src/components/practice-planner/StrategyCard.tsx",
      "purpose": "Modals",
      "imports": [
        "lucide-react",
        "react",
        "./modals/VideoModal",
        "./modals/LacrosseLabModal"
      ],
      "exports": [
        "StrategyCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "strategy",
        "gamePhase",
        "onRemove",
        "id",
        "isMobile"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/lazy/LazyDrillLibrary.tsx": {
      "path": "src/components/practice-planner/lazy/LazyDrillLibrary.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next/dynamic"
      ],
      "exports": [
        "LazyDrillLibrary"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onAddDrill",
        "drill"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/lazy/LazyPracticeTimeline.tsx": {
      "path": "src/components/practice-planner/lazy/LazyPracticeTimeline.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next/dynamic",
        "react"
      ],
      "exports": [
        "LazyPracticeTimeline"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [
        "drills",
        "setDrills",
        "drills",
        "startTime",
        "setupTime"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/modals/AddCustomDrillModal.tsx": {
      "path": "src/components/practice-planner/modals/AddCustomDrillModal.tsx",
      "purpose": "Drill Title",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/useUserDrills",
        "@/contexts/SupabaseAuthContext",
        "sonner"
      ],
      "exports": [
        "AddCustomDrillModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onAdd",
        "drill",
        "onDrillCreated",
        "editDrill",
        "onDrillUpdated"
      ],
      "hooks_used": [
        "useUserDrills",
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/AddCustomStrategiesModal.tsx": {
      "path": "src/components/practice-planner/modals/AddCustomStrategiesModal.tsx",
      "purpose": "Strategy Name",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/useUserStrategies",
        "@/contexts/SupabaseAuthContext",
        "sonner",
        "@/hooks/useStrategies"
      ],
      "exports": [
        "AddCustomStrategiesModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onAdd",
        "strategy",
        "onStrategyCreated",
        "editStrategy",
        "onStrategyUpdated"
      ],
      "hooks_used": [
        "useUserStrategies",
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/AdminEditModal.tsx": {
      "path": "src/components/practice-planner/modals/AdminEditModal.tsx",
      "purpose": "Delete Confirmation Dialog",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "lucide-react",
        "@/hooks/useAdminEdit"
      ],
      "exports": [
        "AdminEditModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "user",
        "itemType",
        "item",
        "onSave",
        "onDelete"
      ],
      "hooks_used": [
        "useAdminEdit",
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/FilterStrategiesModal.tsx": {
      "path": "src/components/practice-planner/modals/FilterStrategiesModal.tsx",
      "purpose": "Categories",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "FilterStrategiesModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "availableCategories",
        "selectedCategories",
        "onApplyFilters",
        "categories"
      ],
      "hooks_used": [
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/FullscreenDiagramModal.tsx": {
      "path": "src/components/practice-planner/modals/FullscreenDiagramModal.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "FullscreenDiagramModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "labUrls",
        "currentIndex",
        "drill"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/LacrosseLabModal.tsx": {
      "path": "src/components/practice-planner/modals/LacrosseLabModal.tsx",
      "purpose": "Carousel Container",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "./FullscreenDiagramModal"
      ],
      "exports": [
        "hasLabUrls",
        "LacrosseLabModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "drill",
        "title",
        "name",
        "drill_lab_url_1",
        "drill_lab_url_2",
        "drill_lab_url_3",
        "drill_lab_url_4",
        "drill_lab_url_5",
        "lacrosse_lab_urls",
        "lab_urls"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/LinksModal.tsx": {
      "path": "src/components/practice-planner/modals/LinksModal.tsx",
      "purpose": "Modal component",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "LinksModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "drill",
        "title",
        "name",
        "custom_url",
        "drill_lab_url_1",
        "drill_lab_url_2",
        "drill_lab_url_3",
        "lacrosse_lab_urls"
      ],
      "hooks_used": []
    },
    "src/components/practice-planner/modals/LoadPracticeModal.tsx": {
      "path": "src/components/practice-planner/modals/LoadPracticeModal.tsx",
      "purpose": "Search",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/components/ui/input",
        "date-fns"
      ],
      "exports": [
        "LoadPracticeModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onLoad",
        "plan",
        "plans",
        "loading"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/modals/SavePracticeModal.tsx": {
      "path": "src/components/practice-planner/modals/SavePracticeModal.tsx",
      "purpose": "Modal component",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "lucide-react"
      ],
      "exports": [
        "SavePracticeModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onSave",
        "title",
        "notes",
        "defaultTitle",
        "defaultNotes",
        "isUpdate"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/modals/SetupTimeModal.tsx": {
      "path": "src/components/practice-planner/modals/SetupTimeModal.tsx",
      "purpose": "Modal component",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button"
      ],
      "exports": [
        "SetupTimeModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onSave",
        "notes",
        "defaultNotes",
        "setupTime"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/practice-planner/modals/StrategiesListModal.tsx": {
      "path": "src/components/practice-planner/modals/StrategiesListModal.tsx",
      "purpose": "Summary Stats",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/accordion",
        "lucide-react",
        "@/hooks/useStrategies",
        "@/components/ui/button"
      ],
      "exports": [
        "StrategiesListModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose"
      ],
      "hooks_used": [
        "useStrategies"
      ]
    },
    "src/components/practice-planner/modals/StrategiesModal.tsx": {
      "path": "src/components/practice-planner/modals/StrategiesModal.tsx",
      "purpose": "Related Strategies from Database",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/accordion",
        "lucide-react",
        "@/hooks/useStrategies"
      ],
      "exports": [
        "StrategiesModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "onRefreshStrategies",
        "drill",
        "title",
        "name",
        "strategies",
        "concepts",
        "skills",
        "game_phase_ids",
        "intensity_level",
        "min_players",
        "max_players",
        "notes",
        "coach_instructions",
        "category",
        "subcategory"
      ],
      "hooks_used": [
        "useStrategies",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/StudyDrillModal.tsx": {
      "path": "src/components/practice-planner/modals/StudyDrillModal.tsx",
      "purpose": "Favorite button next to title",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useFavorites",
        "sonner"
      ],
      "exports": [
        "StudyDrillModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "drill",
        "onUpdateDrill",
        "drill"
      ],
      "hooks_used": [
        "useFavorites",
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/StudyStrategyModal.tsx": {
      "path": "src/components/practice-planner/modals/StudyStrategyModal.tsx",
      "purpose": "TODO: Add favorite functionality",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "StudyStrategyModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "strategy"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/practice-planner/modals/VideoModal.tsx": {
      "path": "src/components/practice-planner/modals/VideoModal.tsx",
      "purpose": "Modal component",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "VideoModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "drill",
        "title",
        "name",
        "videoUrl",
        "drill_video_url"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/providers/ToasterProvider.tsx": {
      "path": "src/components/providers/ToasterProvider.tsx",
      "purpose": "Component or utility",
      "imports": [
        "sonner"
      ],
      "exports": [
        "ToasterProvider"
      ],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": []
    },
    "src/components/resources/ResourceCard.tsx": {
      "path": "src/components/resources/ResourceCard.tsx",
      "purpose": "Thumbnail or Icon Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/dropdown-menu",
        "@/hooks/useResourceFavorites",
        "@/lib/resources-data-provider",
        "sonner"
      ],
      "exports": [
        "ResourceCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "resource",
        "onClick",
        "isFavorite",
        "isCompact",
        "showActions",
        "className"
      ],
      "hooks_used": [
        "useResourceFavorites",
        "useState"
      ]
    },
    "src/components/resources/ResourceDetailModal.tsx": {
      "path": "src/components/resources/ResourceDetailModal.tsx",
      "purpose": "Overview Tab",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/hooks/useResourceFavorites",
        "@/contexts/SupabaseAuthContext",
        "sonner",
        "@/lib/resources-data-provider"
      ],
      "exports": [
        "ResourceDetailModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "resource",
        "relatedResources"
      ],
      "hooks_used": [
        "useAuth",
        "useResourceFavorites",
        "useState",
        "useEffect"
      ]
    },
    "src/components/resources/ResourceFilter.tsx": {
      "path": "src/components/resources/ResourceFilter.tsx",
      "purpose": "Search Bar",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/accordion",
        "@/components/ui/checkbox",
        "lucide-react"
      ],
      "exports": [
        "FilterState",
        "ResourceFilter"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onFilterChange",
        "filters",
        "activeFilters",
        "userRole",
        "categories",
        "id",
        "name"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/resources/index.ts": {
      "path": "src/components/resources/index.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/search/GlobalSearch.tsx": {
      "path": "src/components/search/GlobalSearch.tsx",
      "purpose": "Search Header",
      "imports": [
        "react",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "GlobalSearch"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose"
      ],
      "hooks_used": [
        "useState",
        "useCallback",
        "useEffect"
      ]
    },
    "src/components/search/SearchTrigger.tsx": {
      "path": "src/components/search/SearchTrigger.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "lucide-react",
        "./GlobalSearch"
      ],
      "exports": [
        "SearchTrigger"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "variant",
        "className",
        "placeholder"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/CelebrationAnimation.tsx": {
      "path": "src/components/skills-academy/CelebrationAnimation.tsx",
      "purpose": "Background celebration glow",
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "CelebrationAnimation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "points",
        "isVisible",
        "onAnimationEnd"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/DrillSequencePlayer.tsx": {
      "path": "src/components/skills-academy/DrillSequencePlayer.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/types/skills-academy",
        "lucide-react",
        "@/hooks/useSkillsAcademyWorkouts"
      ],
      "exports": [
        "DrillSequencePlayer"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "session",
        "userId",
        "onClose",
        "onComplete"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/PointCounter.tsx": {
      "path": "src/components/skills-academy/PointCounter.tsx",
      "purpose": "Current points earned in the workout",
      "imports": [
        "react",
        "@/hooks/usePointTypes",
        "next/image"
      ],
      "exports": [
        "PointCounter"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "points",
        "seriesType",
        "animate",
        "className"
      ],
      "hooks_used": [
        "usePointTypes",
        "useEffect"
      ]
    },
    "src/components/skills-academy/PointExplosion.tsx": {
      "path": "src/components/skills-academy/PointExplosion.tsx",
      "purpose": "Much larger icons for visibility",
      "imports": [
        "react",
        "framer-motion",
        "next/image"
      ],
      "exports": [
        "PointExplosion"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isVisible",
        "originElement",
        "points",
        "pointTypes",
        "name",
        "display_name",
        "icon_url"
      ],
      "hooks_used": [
        "useEffect"
      ]
    },
    "src/components/skills-academy/PointsAnimation.tsx": {
      "path": "src/components/skills-academy/PointsAnimation.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [
        "PointsAnimation",
        "PointTypeAnimation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "points",
        "multiplier",
        "onComplete",
        "pointsBreakdown",
        "lax_credits",
        "attack_tokens",
        "defense_dollars",
        "midfield_medals",
        "rebound_rewards",
        "flex_points"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/QuizWorkoutRunner.tsx": {
      "path": "src/components/skills-academy/QuizWorkoutRunner.tsx",
      "purpose": "Completion Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "lucide-react",
        "next/link",
        "next/navigation",
        "@/lib/utils",
        "@/types/skills-academy"
      ],
      "exports": [
        "WorkoutRunner"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "workout"
      ],
      "hooks_used": [
        "useRouter",
        "useState",
        "useEffect",
        "useCallback"
      ]
    },
    "src/components/skills-academy/SkillsAcademyHubEnhanced.tsx": {
      "path": "src/components/skills-academy/SkillsAcademyHubEnhanced.tsx",
      "purpose": "Hero Section",
      "imports": [
        "react",
        "next/navigation",
        "@/components/ui/button",
        "@/components/ui/card",
        "./TrackCards",
        "lucide-react"
      ],
      "exports": [
        "SkillsAcademyHubEnhanced"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userId"
      ],
      "hooks_used": [
        "useRouter",
        "useState"
      ]
    },
    "src/components/skills-academy/SkillsAcademySeriesCardEnhanced.tsx": {
      "path": "src/components/skills-academy/SkillsAcademySeriesCardEnhanced.tsx",
      "purpose": "Compact header with gradient background",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/skeleton",
        "@/types/skills-academy",
        "lucide-react",
        "./WorkoutPreviewModal",
        "./WorkoutSizeSelector",
        "@/hooks/useSkillsAcademyWorkouts"
      ],
      "exports": [
        "SkillsAcademySeriesCardEnhanced"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "series",
        "onStartWorkout",
        "workoutId",
        "isFavorite",
        "onToggleFavorite",
        "seriesId",
        "completedWorkouts"
      ],
      "hooks_used": [
        "useState",
        "useSkillsAcademyWorkouts"
      ]
    },
    "src/components/skills-academy/StreakTracker.tsx": {
      "path": "src/components/skills-academy/StreakTracker.tsx",
      "purpose": "Main Streak Display",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "StreakTracker",
        "StreakBadge"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userId",
        "onStreakUpdate",
        "streak"
      ],
      "hooks_used": [
        "useEffect"
      ]
    },
    "src/components/skills-academy/TrackCards.tsx": {
      "path": "src/components/skills-academy/TrackCards.tsx",
      "purpose": "Gradient Background",
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "TrackCards"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "onTrackClick",
        "track"
      ],
      "hooks_used": []
    },
    "src/components/skills-academy/WallBallSeriesCard.tsx": {
      "path": "src/components/skills-academy/WallBallSeriesCard.tsx",
      "purpose": "Thumbnail Section",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/types/wall-ball",
        "lucide-react"
      ],
      "exports": [
        "WallBallSeriesCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "series",
        "onSelect",
        "series"
      ],
      "hooks_used": []
    },
    "src/components/skills-academy/WallBallVariantSelector.tsx": {
      "path": "src/components/skills-academy/WallBallVariantSelector.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/types/wall-ball",
        "lucide-react"
      ],
      "exports": [
        "WallBallVariantSelector"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "variants",
        "seriesName",
        "onSelectVariant",
        "variant",
        "onBack"
      ],
      "hooks_used": []
    },
    "src/components/skills-academy/WallBallVideoPlayer.tsx": {
      "path": "src/components/skills-academy/WallBallVideoPlayer.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/types/wall-ball",
        "lucide-react",
        "@/hooks/useWallBallWorkouts"
      ],
      "exports": [
        "WallBallVideoPlayer"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "variant",
        "onClose",
        "userId"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/skills-academy/WallBallWorkoutHub.tsx": {
      "path": "src/components/skills-academy/WallBallWorkoutHub.tsx",
      "purpose": "Video Player Modal",
      "imports": [
        "react",
        "./WallBallSeriesCard",
        "./WallBallVariantSelector",
        "./WallBallVideoPlayer",
        "@/hooks/useWallBallWorkouts",
        "@/types/wall-ball",
        "lucide-react",
        "@/components/ui/alert"
      ],
      "exports": [
        "WallBallWorkoutHub"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userId"
      ],
      "hooks_used": [
        "useWallBallSeries",
        "useWallBallVariants"
      ]
    },
    "src/components/skills-academy/WallBallWorkoutRunner.tsx": {
      "path": "src/components/skills-academy/WallBallWorkoutRunner.tsx",
      "purpose": "Completion Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "lucide-react",
        "next/link",
        "next/navigation",
        "@/lib/utils"
      ],
      "exports": [
        "WallBallWorkoutRunner"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "workout"
      ],
      "hooks_used": [
        "useRouter",
        "useState",
        "useEffect",
        "useCallback"
      ]
    },
    "src/components/skills-academy/WorkoutCompletionAnimation.tsx": {
      "path": "src/components/skills-academy/WorkoutCompletionAnimation.tsx",
      "purpose": "Main Trophy Animation with Badge Images",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "next/link",
        "canvas-confetti"
      ],
      "exports": [
        "WorkoutCompletionAnimation"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "workoutName",
        "totalPoints",
        "bonusMultiplier",
        "drillsCompleted",
        "totalDrills",
        "timeSpent",
        "onRepeat",
        "earnedBadge"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/WorkoutErrorBoundary.tsx": {
      "path": "src/components/skills-academy/WorkoutErrorBoundary.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "WorkoutErrorBoundary"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "children",
        "fallback"
      ],
      "hooks_used": []
    },
    "src/components/skills-academy/WorkoutPreviewModal.tsx": {
      "path": "src/components/skills-academy/WorkoutPreviewModal.tsx",
      "purpose": "Workout Stats",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/lib/supabase"
      ],
      "exports": [
        "WorkoutPreviewModal"
      ],
      "database_tables": [
        "skills_academy_drills"
      ],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "workout",
        "onStart",
        "workoutId"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/components/skills-academy/WorkoutReviewModal.tsx": {
      "path": "src/components/skills-academy/WorkoutReviewModal.tsx",
      "purpose": "Workout Summary Header",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "WorkoutReviewModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "workout",
        "drills",
        "drillTimes",
        "totalPoints",
        "totalTime",
        "completedDrills",
        "isWallBallWorkout"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/skills-academy/WorkoutSizeSelector.tsx": {
      "path": "src/components/skills-academy/WorkoutSizeSelector.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/types/skills-academy",
        "lucide-react",
        "@/components/ui/collapsible"
      ],
      "exports": [
        "WorkoutSizeSelector"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "seriesName",
        "seriesCode",
        "workouts",
        "onSelectWorkout",
        "workout",
        "onBack"
      ],
      "hooks_used": []
    },
    "src/components/team-playbook/PlaybookCard.tsx": {
      "path": "src/components/team-playbook/PlaybookCard.tsx",
      "purpose": "Card Header",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react",
        "@/types/teamPlaybook",
        "@/hooks/useStrategies",
        "react",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "PlaybookCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "playbook",
        "onOpenStrategy",
        "strategy",
        "onEdit",
        "playbook",
        "onDelete",
        "playbookId",
        "currentUserId"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/team-playbook/SaveToPlaybookModal.tsx": {
      "path": "src/components/team-playbook/SaveToPlaybookModal.tsx",
      "purpose": "Strategy Preview",
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/label",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useStrategies",
        "@/hooks/useTeamPlaybook"
      ],
      "exports": [
        "SaveToPlaybookModal"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "isOpen",
        "onClose",
        "strategy",
        "onSuccess"
      ],
      "hooks_used": [
        "useState",
        "useUserTeams",
        "useTeamPlaybook"
      ]
    },
    "src/components/team-playbook/TeamPlaybook.tsx": {
      "path": "src/components/team-playbook/TeamPlaybook.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/scroll-area",
        "lucide-react",
        "./PlaybookCard",
        "@/hooks/useTeamPlaybook",
        "@/types/teamPlaybook",
        "@/hooks/useStrategies",
        "@/components/practice-planner/modals/StudyStrategyModal",
        "@/lib/supabase"
      ],
      "exports": [
        "TeamPlaybook"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "teamId",
        "teamName",
        "onAddStrategy"
      ],
      "hooks_used": [
        "useState",
        "useTeamPlaybook",
        "useEffect",
        "useMemo"
      ]
    },
    "src/components/teams/PlayerStatsCard.tsx": {
      "path": "src/components/teams/PlayerStatsCard.tsx",
      "purpose": "Points and Rank Cards",
      "imports": [
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "@/hooks/usePlayerStats"
      ],
      "exports": [
        "PlayerStatsCard"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "userId",
        "teamId",
        "showEditProfile",
        "playerName",
        "teamName"
      ],
      "hooks_used": [
        "usePlayerStats"
      ]
    },
    "src/components/teams/dashboard/CoachQuickActions.tsx": {
      "path": "src/components/teams/dashboard/CoachQuickActions.tsx",
      "purpose": "Primary action button - Start Practice",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/hooks/useTeamDashboard",
        "@/types/teams"
      ],
      "exports": [
        "CoachQuickActions"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "upcomingEvents"
      ],
      "hooks_used": [
        "useState",
        "useTeamDashboard"
      ]
    },
    "src/components/teams/dashboard/ParentView.tsx": {
      "path": "src/components/teams/dashboard/ParentView.tsx",
      "purpose": "Parent Welcome Header",
      "imports": [
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/types/teams",
        "@/hooks/useTeamDashboard"
      ],
      "exports": [
        "ParentView"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "playerMembers",
        "upcomingEvents",
        "recentActivity"
      ],
      "hooks_used": []
    },
    "src/components/teams/dashboard/PlayerView.tsx": {
      "path": "src/components/teams/dashboard/PlayerView.tsx",
      "purpose": "Player Stats Card - Real data integration",
      "imports": [
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/tabs",
        "@/components/teams/PlayerStatsCard",
        "@/components/teams/dashboard/TeamPlaybookSection",
        "@/types/teams",
        "@/hooks/useTeamDashboard"
      ],
      "exports": [
        "PlayerView"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "player",
        "ageGroup",
        "upcomingEvents",
        "teamStats",
        "recentActivity"
      ],
      "hooks_used": []
    },
    "src/components/teams/dashboard/ProgressOverview.tsx": {
      "path": "src/components/teams/dashboard/ProgressOverview.tsx",
      "purpose": "Team Progress Overview",
      "imports": [
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/types/teams",
        "@/hooks/useTeamDashboard"
      ],
      "exports": [
        "ProgressOverview"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "members",
        "stats"
      ],
      "hooks_used": []
    },
    "src/components/teams/dashboard/RecentActivity.tsx": {
      "path": "src/components/teams/dashboard/RecentActivity.tsx",
      "purpose": "Activity Icon",
      "imports": [
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/select",
        "react",
        "@/types/teams",
        "@/hooks/useTeamDashboard"
      ],
      "exports": [
        "RecentActivity"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "activity",
        "team",
        "canManage"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/teams/dashboard/TeamHeader.tsx": {
      "path": "src/components/teams/dashboard/TeamHeader.tsx",
      "purpose": "Mobile-first responsive header",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/avatar",
        "next/link",
        "@/types/teams"
      ],
      "exports": [
        "TeamHeader"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "userRole",
        "members"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/teams/dashboard/TeamPlaybookSection.tsx": {
      "path": "src/components/teams/dashboard/TeamPlaybookSection.tsx",
      "purpose": "Category Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/hooks/useTeamPlaybook",
        "@/types/teamPlaybook",
        "@/hooks/useStrategies",
        "@/components/practice-planner/modals/StudyStrategyModal",
        "@/lib/supabase"
      ],
      "exports": [
        "TeamPlaybookSection"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "teamId",
        "teamName",
        "isCoach",
        "className"
      ],
      "hooks_used": [
        "useState",
        "useTeamPlaybook",
        "useEffect",
        "useMemo"
      ]
    },
    "src/components/teams/dashboard/TeamRoster.tsx": {
      "path": "src/components/teams/dashboard/TeamRoster.tsx",
      "purpose": "Search and Filter",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/avatar",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/types/teams",
        "@/hooks/useTeamDashboard"
      ],
      "exports": [
        "TeamRoster"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "team",
        "members",
        "canTakeAttendance",
        "upcomingEvent"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/components/teams/dashboard/UpcomingSchedule.tsx": {
      "path": "src/components/teams/dashboard/UpcomingSchedule.tsx",
      "purpose": "Remove weather since it's not in practices table",
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/hooks/useTeamDashboard",
        "@/types/teams"
      ],
      "exports": [
        "UpcomingSchedule"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "events",
        "team",
        "canManage"
      ],
      "hooks_used": [
        "useState",
        "useTeamDashboard"
      ]
    },
    "src/components/theme/ThemeToggle.tsx": {
      "path": "src/components/theme/ThemeToggle.tsx",
      "purpose": "Component or utility",
      "imports": [
        "lucide-react",
        "@/contexts/ThemeContext",
        "@/components/ui/button"
      ],
      "exports": [
        "ThemeToggle"
      ],
      "database_tables": [],
      "type": "client",
      "props": [
        "variant",
        "size",
        "showLabel"
      ],
      "hooks_used": [
        "useTheme"
      ]
    },
    "src/components/ui/accordion.tsx": {
      "path": "src/components/ui/accordion.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-accordion",
        "@/lib/utils",
        "@radix-ui/react-icons"
      ],
      "exports": [],
      "database_tables": [],
      "type": "client",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/alert.tsx": {
      "path": "src/components/ui/alert.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/avatar.tsx": {
      "path": "src/components/ui/avatar.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-avatar",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/badge.tsx": {
      "path": "src/components/ui/badge.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "BadgeProps"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/button.tsx": {
      "path": "src/components/ui/button.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "ButtonProps"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/card.tsx": {
      "path": "src/components/ui/card.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/checkbox.tsx": {
      "path": "src/components/ui/checkbox.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-checkbox",
        "@/lib/utils",
        "@radix-ui/react-icons"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/collapsible.tsx": {
      "path": "src/components/ui/collapsible.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@radix-ui/react-collapsible"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/dialog.tsx": {
      "path": "src/components/ui/dialog.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "@/lib/utils",
        "@radix-ui/react-icons"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/dropdown-menu.tsx": {
      "path": "src/components/ui/dropdown-menu.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-dropdown-menu",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/input.tsx": {
      "path": "src/components/ui/input.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "InputProps"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/label.tsx": {
      "path": "src/components/ui/label.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-label",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/progress.tsx": {
      "path": "src/components/ui/progress.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-progress",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/scroll-area.tsx": {
      "path": "src/components/ui/scroll-area.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-scroll-area",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/select.tsx": {
      "path": "src/components/ui/select.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-select",
        "@/lib/utils",
        "@radix-ui/react-icons"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/separator.tsx": {
      "path": "src/components/ui/separator.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-separator",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/skeleton.tsx": {
      "path": "src/components/ui/skeleton.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/table.tsx": {
      "path": "src/components/ui/table.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/tabs.tsx": {
      "path": "src/components/ui/tabs.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-tabs",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/textarea.tsx": {
      "path": "src/components/ui/textarea.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "TextareaProps"
      ],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    },
    "src/components/ui/tooltip.tsx": {
      "path": "src/components/ui/tooltip.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils"
      ],
      "exports": [],
      "database_tables": [],
      "type": "mixed",
      "props": [],
      "hooks_used": []
    }
  },
  "api_routes": {
    "src/app/api/admin/wp-import-check/route.ts": {
      "path": "src/app/api/admin/wp-import-check/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@supabase/supabase-js"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "clubs",
        "teams",
        "team_members",
        "users"
      ],
      "methods": [
        "GET"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/debug/auth/route.ts": {
      "path": "src/app/api/debug/auth/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase-server",
        "next/headers"
      ],
      "exports": [],
      "database_tables": [],
      "methods": [
        "GET"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/email/send-magic-link/route.ts": {
      "path": "src/app/api/email/send-magic-link/route.ts",
      "purpose": "const wordpressResponse = await fetch(`${process.env.WORDPRESS_API_URL}/wp-json/powlax/v1/send-email`, {",
      "imports": [
        "next/server"
      ],
      "exports": [],
      "database_tables": [],
      "methods": [
        "POST"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/gamipress/sync/route.ts": {
      "path": "src/app/api/gamipress/sync/route.ts",
      "purpose": "GamiPress Sync API Endpoint",
      "imports": [
        "next/server",
        "../../../../../scripts/sync-gamipress",
        "@supabase/supabase-js"
      ],
      "exports": [],
      "database_tables": [
        "gamipress_sync_log"
      ],
      "methods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/memberpress/webhook/route.ts": {
      "path": "src/app/api/memberpress/webhook/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@supabase/supabase-js",
        "crypto"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "users",
        "team_teams",
        "registration_links",
        "club_organizations",
        "webhook_events",
        "membership_products",
        "membership_entitlements",
        "team_members"
      ],
      "methods": [
        "POST"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/sync/full/route.ts": {
      "path": "src/app/api/sync/full/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/sync/organizations/route.ts": {
      "path": "src/app/api/sync/organizations/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/sync/status/route.ts": {
      "path": "src/app/api/sync/status/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "clubs",
        "teams",
        "user_team_roles"
      ],
      "methods": [
        "GET"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/sync/teams/route.ts": {
      "path": "src/app/api/sync/teams/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/sync/users/route.ts": {
      "path": "src/app/api/sync/users/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/teams/[teamId]/route.ts": {
      "path": "src/app/api/teams/[teamId]/route.ts",
      "purpose": "API route for team operations",
      "imports": [
        "next/server",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "teams"
      ],
      "methods": [
        "GET"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/test/supabase-connection/route.ts": {
      "path": "src/app/api/test/supabase-connection/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase"
      ],
      "exports": [],
      "database_tables": [
        "profiles"
      ],
      "methods": [
        "POST"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/wordpress/memberpress/route.ts": {
      "path": "src/app/api/wordpress/memberpress/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "next/headers"
      ],
      "exports": [],
      "database_tables": [],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": false,
      "return_type": "JSON"
    },
    "src/app/api/workouts/complete/route.ts": {
      "path": "src/app/api/workouts/complete/route.ts",
      "purpose": "Fetch drills by IDs from appropriate table",
      "imports": [
        "next/server",
        "@/lib/supabase-server",
        "@/lib/gamification/point-calculator",
        "@/lib/gamification/streak-manager"
      ],
      "exports": [],
      "database_tables": [
        "powlax_drills",
        "skills_academy_drills",
        "workout_completions",
        "points_transactions_powlax",
        "user_points_balance_powlax",
        "badges_powlax",
        "user_badge_progress_powlax"
      ],
      "methods": [
        "POST"
      ],
      "auth_required": true,
      "return_type": "JSON"
    },
    "src/app/api/workouts/progress/route.ts": {
      "path": "src/app/api/workouts/progress/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "skills_academy_user_progress",
        "user_points_balance_powlax",
        "skills_academy_user_streaks"
      ],
      "methods": [
        "GET",
        "POST"
      ],
      "auth_required": false,
      "return_type": "JSON"
    }
  },
  "hooks": {
    "src/hooks/useAdminEdit.ts": {
      "path": "src/hooks/useAdminEdit.ts",
      "purpose": "Admin Edit Hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/lib/adminPermissions",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "useAdminEdit"
      ],
      "database_tables": [
        "powlax_drills",
        "powlax_strategies"
      ],
      "returns": [
        "loading",
        "error",
        "isAdmin",
        "updateDrill",
        "updateStrategy",
        "deleteDrill",
        "deleteStrategy",
        "createDrill",
        "createStrategy",
        "clearError"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useBulkUserOperations.ts": {
      "path": "src/hooks/useBulkUserOperations.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "User",
        "BulkOperationProgress",
        "BulkFilterCriteria",
        "BulkRoleOperation",
        "BulkResult",
        "useBulkUserOperations"
      ],
      "database_tables": [
        "users",
        "membership_entitlements",
        "magic_links"
      ],
      "returns": [
        "users",
        "filteredUsers",
        "loading",
        "operationProgress",
        "loadUsers",
        "filterUsers",
        "bulkUpdateRoles",
        "bulkAssignMemberships",
        "bulkSendMagicLinks",
        "resetPasswords"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useClubsManagement.ts": {
      "path": "src/hooks/useClubsManagement.ts",
      "purpose": "Clubs Management Hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/lib/platform/tier-enforcement"
      ],
      "exports": [
        "Club",
        "ClubSettings",
        "ClubTeam",
        "ClubAnalytics",
        "BulkOperation",
        "BulkResult",
        "useClubsManagement"
      ],
      "database_tables": [
        "team_members",
        "teams",
        "clubs"
      ],
      "returns": [
        "success",
        "0",
        "processed",
        "failed",
        "errors",
        "false",
        "1",
        "message",
        "requiresUpgrade",
        "state",
        "loadClubs",
        "selectClub",
        "updateClubSettings",
        "loadTeams",
        "loadAnalytics",
        "performBulkOperation",
        "hasFeatureAccess",
        "getUpgradeInfo"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useCoachingKitManagement.ts": {
      "path": "src/hooks/useCoachingKitManagement.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react"
      ],
      "exports": [
        "useCoachingKitManagement"
      ],
      "database_tables": [],
      "returns": [
        "resources_created",
        "monthly_usage",
        "tier",
        "coaching_tier",
        "engagement_score",
        "coaches",
        "resources",
        "trainings",
        "analytics",
        "selectedCoach",
        "loading",
        "error",
        "selectCoach",
        "approveContent",
        "createResource",
        "uploadTraining",
        "getCoachAnalytics",
        "hasKitAccess"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useDashboardData.ts": {
      "path": "src/hooks/useDashboardData.ts",
      "purpose": "Hook to fetch dashboard data - NO AUTH VERSION",
      "imports": [
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "useDashboardData"
      ],
      "database_tables": [],
      "returns": [
        "data",
        "dashboardData",
        "isLoading",
        "false",
        "error",
        "null",
        "refetch"
      ],
      "dependencies": [],
      "query_keys": []
    },
    "src/hooks/useDashboardFavorites.ts": {
      "path": "src/hooks/useDashboardFavorites.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useDashboardFavorites"
      ],
      "database_tables": [
        "coach_favorites"
      ],
      "returns": [
        "favorites",
        "loading",
        "error",
        "addFavorite",
        "updateFavorite",
        "removeFavorite",
        "togglePin",
        "refreshFavorites"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useDrills.ts": {
      "path": "src/hooks/useDrills.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useDrills"
      ],
      "database_tables": [
        "powlax_drills",
        "user_drills"
      ],
      "returns": [
        "drills",
        "loading",
        "error",
        "refreshDrills",
        "getPowlaxDrills",
        "getUserDrills",
        "getDrillsBySource",
        "source"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useFavorites.ts": {
      "path": "src/hooks/useFavorites.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "sonner",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "useFavorites"
      ],
      "database_tables": [
        "user_favorites"
      ],
      "returns": [
        "favoriteItems",
        "loading",
        "toggleFavorite",
        "isFavorite",
        "getFavoriteCount",
        "getFavorites",
        "getFavoriteDrills",
        "getFavoriteStrategies",
        "refreshFavorites"
      ],
      "dependencies": [
        "react",
        "sonner"
      ],
      "query_keys": []
    },
    "src/hooks/useGamification.ts": {
      "path": "src/hooks/useGamification.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useGamification"
      ],
      "database_tables": [
        "powlax_points_currencies",
        "user_badges",
        "powlax_player_ranks"
      ],
      "returns": [
        "pointTypes",
        "badges",
        "ranks",
        "totalPoints",
        "currentRank",
        "loading"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useGamificationData.ts": {
      "path": "src/hooks/useGamificationData.ts",
      "purpose": "const { data: userPoints } = await supabase",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useGamificationData"
      ],
      "database_tables": [
        "user_points",
        "user_badges",
        "user_achievements",
        "user_activity_log"
      ],
      "returns": [
        "name",
        "level",
        "nextRank",
        "progressToNext",
        "100",
        "pointsToNext",
        "data",
        "loading",
        "error",
        "refresh",
        "totalPoints",
        "pointsByType",
        "lax_credit",
        "attack_token",
        "defense_dollar",
        "midfield_medal",
        "rebound_reward",
        "flex_points"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useMagicLinkManagement.ts": {
      "path": "src/hooks/useMagicLinkManagement.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/lib/magic-links/capability-router"
      ],
      "exports": [
        "MagicLink",
        "GenerateMagicLinkOptions",
        "GenerateMagicLinkResult",
        "EmailResult",
        "useMagicLinkManagement"
      ],
      "database_tables": [
        "magic_links",
        "membership_entitlements"
      ],
      "returns": [
        "id",
        "token",
        "magicLinkUrl",
        "success",
        "true",
        "message",
        "false",
        "magicLinks",
        "loading",
        "refreshMagicLinks",
        "generateMagicLink",
        "revokeMagicLink",
        "sendViaEmail",
        "listActiveLinks"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useMembershipCapabilities.ts": {
      "path": "src/hooks/useMembershipCapabilities.ts",
      "purpose": "useMembershipCapabilities Hook",
      "imports": [
        "react",
        "@/lib/membership/capability-engine"
      ],
      "exports": [
        "useMembershipCapabilities",
        "useCapabilityCheck",
        "useMultipleCapabilities",
        "useTeamOverview",
        "useAcademyAccess",
        "useCoachAccess",
        "useTeamAccess",
        "getCapabilityDisplayName",
        "getProductTierColor"
      ],
      "database_tables": [],
      "returns": [
        "capabilities",
        "loading",
        "error",
        "refresh",
        "hasAcademyAccess",
        "hasFullAcademy",
        "hasBasicAcademy",
        "hasCoachAccess",
        "hasTeamAccess",
        "teamLimits",
        "hasAccess",
        "results",
        "teamData",
        "hasOpenSlots",
        "0",
        "isAtLimit",
        "playerCount",
        "playerLimit",
        "academyTier",
        "hasAnyAccess",
        "hasFullAccess",
        "hasBasicAccess",
        "hasLimitedAccess",
        "hasPracticePlanner",
        "false",
        "hasResources",
        "hasCustomContent",
        "hasTraining",
        "hasAnyCoachAccess",
        "coachCapabilities",
        "hasTeamManagement",
        "hasRoster",
        "hasPlaybook",
        "hasAnalytics",
        "hasAnyTeamAccess",
        "teamCapabilities"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useModalAuth.ts": {
      "path": "src/hooks/useModalAuth.ts",
      "purpose": "Hook for managing modal authentication state",
      "imports": [
        "react"
      ],
      "exports": [
        "useModalAuth",
        "triggerAuthModal",
        "signalAuthSuccess"
      ],
      "database_tables": [],
      "returns": [
        "isAuthModalOpen",
        "isOpen",
        "authReturnUrl",
        "returnUrl",
        "authRequestCount",
        "requestCount",
        "showAuthModal",
        "hideAuthModal",
        "requestAuth",
        "clearReturnUrl",
        "handleAuthSuccess",
        "hasAuthRequest",
        "0"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useOrganizations.ts": {
      "path": "src/hooks/useOrganizations.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "@/types/teams"
      ],
      "exports": [
        "useOrganizations",
        "useOrganization"
      ],
      "database_tables": [
        "user_organization_roles",
        "user_team_roles",
        "club_organizations",
        "team_teams"
      ],
      "returns": [
        "data",
        "error",
        "null",
        "organizations",
        "loading",
        "createOrganization",
        "updateOrganization",
        "deleteOrganization",
        "addUserToOrganization",
        "removeUserFromOrganization",
        "refetch",
        "organization",
        "teams",
        "members"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePlatformAnalytics.ts": {
      "path": "src/hooks/usePlatformAnalytics.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react"
      ],
      "exports": [
        "usePlatformAnalytics"
      ],
      "database_tables": [],
      "returns": [
        "analytics",
        "loading",
        "error",
        "refreshAnalytics",
        "getMetricGrowth",
        "getTierRevenue",
        "getFeatureUsage",
        "getRevenueGrowthRate",
        "getTotalUsers",
        "getEngagementRate",
        "getTopPerformingTier",
        "getConversionTrend"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePlayerStats.ts": {
      "path": "src/hooks/usePlayerStats.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "usePlayerStats"
      ],
      "database_tables": [
        "user_points_wallets",
        "users",
        "user_badges",
        "skills_academy_user_progress",
        "powlax_player_ranks"
      ],
      "returns": [
        "playerStats",
        "loading",
        "error"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePointTypes.ts": {
      "path": "src/hooks/usePointTypes.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "PointType",
        "usePointTypes"
      ],
      "database_tables": [
        "point_types_powlax"
      ],
      "returns": [
        "pointTypes",
        "loading",
        "error",
        "getPointTypeByName",
        "getRelevantPointTypes",
        "refetch"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePointsCalculation.ts": {
      "path": "src/hooks/usePointsCalculation.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "UserPointsBalance",
        "PointsBreakdown",
        "WorkoutPointsConfig",
        "usePointsCalculation",
        "useWorkoutPointsTracker"
      ],
      "database_tables": [
        "user_points_balance_powlax",
        "skills_academy_user_streaks"
      ],
      "returns": [
        "basePoints",
        "bonusPoints",
        "totalPoints",
        "user_id",
        "userId",
        "lax_credits",
        "0",
        "attack_tokens",
        "defense_dollars",
        "midfield_medals",
        "rebound_rewards",
        "flex_points",
        "created_at",
        "updated_at",
        "loading",
        "error",
        "calculateWorkoutPoints",
        "fetchUserPoints",
        "updateUserPoints",
        "getUserStreak",
        "calculateTotalPoints",
        "getAchievementPoints",
        "currentPoints",
        "perfectDrillsCount",
        "currentStreak",
        "addDrillPoints",
        "calculateFinalPoints"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePracticePlans.ts": {
      "path": "src/hooks/usePracticePlans.ts",
      "purpose": "stable callback",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "PracticePlan",
        "DrillSequence",
        "TimeSlot",
        "usePracticePlans"
      ],
      "database_tables": [
        "practices"
      ],
      "returns": [
        "record",
        "title",
        "name",
        "drill_sequence",
        "timeSlots",
        "practiceInfo",
        "startTime",
        "07",
        "field",
        "data",
        "error",
        "null",
        "convertedData",
        "plans",
        "loading",
        "savePracticePlan",
        "updatePracticePlan",
        "deletePracticePlan",
        "loadPracticePlan",
        "refetch"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePracticeTemplates.ts": {
      "path": "src/hooks/usePracticeTemplates.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "PracticeTemplate",
        "usePracticeTemplates"
      ],
      "database_tables": [
        "practice_templates"
      ],
      "returns": [
        "data",
        "error",
        "null",
        "templates",
        "loading",
        "createTemplate",
        "updateTemplate",
        "deleteTemplate",
        "incrementUsageCount",
        "getTemplatesByAgeGroup",
        "getTemplatesByCategory",
        "getOfficialTemplates",
        "getPopularTemplates",
        "refreshTemplates"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/usePrint.ts": {
      "path": "src/hooks/usePrint.ts",
      "purpose": "Print-specific styles",
      "imports": [
        "react"
      ],
      "exports": [
        "usePrint"
      ],
      "database_tables": [],
      "returns": [
        "isPrinting"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useProgressTracking.ts": {
      "path": "src/hooks/useProgressTracking.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/types/skills-academy"
      ],
      "exports": [
        "useProgressTracking",
        "useWorkoutProgressTracking"
      ],
      "database_tables": [],
      "returns": [
        "loading",
        "error",
        "updateProgress",
        "fetchProgress",
        "trackDrillStart",
        "trackDrillComplete",
        "trackWorkoutComplete",
        "currentDrillIndex",
        "completedDrills",
        "totalDrills",
        "totalPoints",
        "perfectDrills",
        "totalTimeSeconds",
        "completionPercentage",
        "averageTimePerDrill",
        "isComplete",
        "startDrill",
        "completeDrill",
        "abandonWorkout",
        "getSessionStats"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useResourceFavorites.ts": {
      "path": "src/hooks/useResourceFavorites.ts",
      "purpose": "Toggle favorite status - PERMANENCE PATTERN IMPLEMENTATION",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "sonner"
      ],
      "exports": [
        "useResourceFavorites"
      ],
      "database_tables": [
        "team_members",
        "user_resource_interactions",
        "resource_collections"
      ],
      "returns": [
        "favorites",
        "collections",
        "loading",
        "shareWithTeams",
        "setShareWithTeams",
        "teamIds",
        "setTeamIds",
        "shareWithUsers",
        "setShareWithUsers",
        "userIds",
        "setUserIds",
        "toggleFavorite",
        "isFavorite",
        "createCollection",
        "trackView",
        "refresh"
      ],
      "dependencies": [
        "react",
        "sonner"
      ],
      "query_keys": []
    },
    "src/hooks/useRoleAuditLog.ts": {
      "path": "src/hooks/useRoleAuditLog.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useRoleAuditLog"
      ],
      "database_tables": [
        "role_change_log",
        "permission_templates"
      ],
      "returns": [
        "auditLogs",
        "templates",
        "loading",
        "error",
        "logRoleChange",
        "createPermissionTemplate",
        "applyTemplate",
        "getChangeHistory",
        "getRecentChanges",
        "refreshAuditData"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useServiceWorker.ts": {
      "path": "src/hooks/useServiceWorker.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react"
      ],
      "exports": [
        "useServiceWorker"
      ],
      "database_tables": [],
      "returns": [
        "state",
        "updateServiceWorker",
        "cachePracticeData",
        "getCachedPracticeData",
        "savePendingData"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useSkillsAcademyWorkouts.ts": {
      "path": "src/hooks/useSkillsAcademyWorkouts.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/types/skills-academy"
      ],
      "exports": [
        "useSkillsAcademySeries",
        "useSkillsAcademySeriesByType",
        "useSkillsAcademyWorkouts",
        "useWorkoutSession"
      ],
      "database_tables": [
        "skills_academy_series",
        "skills_academy_workouts",
        "skills_academy_drills",
        "skills_academy_user_progress"
      ],
      "returns": [
        "series",
        "loading",
        "id",
        "workout",
        "drills",
        "workouts",
        "groupedWorkouts",
        "session",
        "success",
        "true",
        "progress",
        "existing",
        "isNew",
        "newProgress",
        "false",
        "data"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useStrategies.ts": {
      "path": "src/hooks/useStrategies.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "Strategy",
        "GAME_PHASES",
        "useStrategies",
        "getStrategiesByGamePhase",
        "getStrategiesBySource",
        "searchStrategies",
        "getStrategiesByActualCategory"
      ],
      "database_tables": [
        "powlax_strategies",
        "user_strategies"
      ],
      "returns": [
        "strategies",
        "loading",
        "error"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useSupabaseDrills.ts": {
      "path": "src/hooks/useSupabaseDrills.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@supabase/supabase-js"
      ],
      "exports": [
        "useSupabaseDrills"
      ],
      "database_tables": [
        "powlax_drills",
        "staging_wp_drills"
      ],
      "returns": [
        "drills",
        "loading",
        "error"
      ],
      "dependencies": [
        "react",
        "@supabase/supabase-js"
      ],
      "query_keys": []
    },
    "src/hooks/useSwipeGesture.ts": {
      "path": "src/hooks/useSwipeGesture.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react"
      ],
      "exports": [
        "useSwipeGesture",
        "useWorkoutSwipe"
      ],
      "database_tables": [],
      "returns": [],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useTeamDashboard.ts": {
      "path": "src/hooks/useTeamDashboard.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "TeamEvent",
        "TeamStats",
        "ActivityItem",
        "useTeamDashboard"
      ],
      "database_tables": [
        "practices",
        "team_members",
        "skills_academy_user_progress",
        "user_badges",
        "users"
      ],
      "returns": [
        "data",
        "null",
        "error",
        "success",
        "true",
        "false",
        "upcomingEvents",
        "teamStats",
        "recentActivity",
        "loading",
        "createEvent",
        "sendAnnouncement",
        "refetch"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useTeamHQManagement.ts": {
      "path": "src/hooks/useTeamHQManagement.ts",
      "purpose": "Team HQ Management Hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/lib/platform/tier-enforcement"
      ],
      "exports": [
        "Team",
        "TeamSettings",
        "TeamMember",
        "TeamSchedule",
        "TeamPlaybook",
        "TeamPlay",
        "TeamAnalytics",
        "useTeamHQManagement"
      ],
      "database_tables": [
        "team_members",
        "teams"
      ],
      "returns": [
        "requiresUpgrade",
        "state",
        "loadTeams",
        "selectTeam",
        "updateTeamSettings",
        "loadRoster",
        "addTeamMember",
        "removeTeamMember",
        "assignAcademyAccess",
        "removeAcademyAccess",
        "loadSchedule",
        "createScheduleEvent",
        "loadPlaybooks",
        "createPlaybook",
        "loadAnalytics",
        "hasFeatureAccess",
        "getUpgradeInfo",
        "checkAcademyLimit"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useTeamPlaybook.ts": {
      "path": "src/hooks/useTeamPlaybook.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/types/teamPlaybook",
        "@/hooks/useStrategies"
      ],
      "exports": [
        "useTeamPlaybook",
        "useUserTeams"
      ],
      "database_tables": [
        "team_playbooks",
        "powlax_strategies",
        "user_strategies",
        "team_members",
        "teams"
      ],
      "returns": [
        "playbook",
        "strategy_name",
        "strategy_categories",
        "description",
        "lacrosse_lab_links",
        "vimeo_link",
        "thumbnail_urls",
        "master_pdf_url",
        "playbooks",
        "loading",
        "error",
        "saveToPlaybook",
        "removeFromPlaybook",
        "updatePlaybook",
        "refreshPlaybooks",
        "teams",
        "refreshTeams"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useTeams.ts": {
      "path": "src/hooks/useTeams.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "@/types/teams"
      ],
      "exports": [
        "useTeams",
        "useTeam"
      ],
      "database_tables": [
        "users",
        "teams",
        "team_members",
        "clubs"
      ],
      "returns": [
        "id",
        "name",
        "slug",
        "g",
        "club_id",
        "organization_id",
        "age_group",
        "level",
        "gender",
        "subscription_tier",
        "team_type",
        "created_at",
        "club",
        "type",
        "const",
        "settings",
        "data",
        "error",
        "null",
        "teams",
        "loading",
        "createTeam",
        "updateTeam",
        "deleteTeam",
        "addUserToTeam",
        "removeUserFromTeam",
        "getTeamMembers",
        "refetch",
        "team",
        "members"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useUserDrills.ts": {
      "path": "src/hooks/useUserDrills.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useUserDrills"
      ],
      "database_tables": [
        "user_drills"
      ],
      "returns": [
        "userDrills",
        "loading",
        "error",
        "createUserDrill",
        "updateUserDrill",
        "deleteUserDrill",
        "shareWithTeams",
        "shareWithClubs"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useUserGamification.ts": {
      "path": "src/hooks/useUserGamification.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/lib/gamification/badges",
        "@/lib/gamification/ranks"
      ],
      "exports": [
        "useUserGamification",
        "useBadgeEligibility",
        "useRankProgress",
        "useBadgeProgress"
      ],
      "database_tables": [],
      "returns": [
        "ranked_up",
        "state",
        "refreshData",
        "checkAndAwardEligibleBadges",
        "updateRank",
        "eligibility",
        "progress",
        "badges",
        "filteredBadges",
        "earnedCount",
        "totalCount",
        "progressPercentage"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useUserStrategies.ts": {
      "path": "src/hooks/useUserStrategies.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useUserStrategies",
        "getStrategiesByGamePhase"
      ],
      "database_tables": [
        "user_strategies"
      ],
      "returns": [
        "userStrategies",
        "loading",
        "error",
        "createUserStrategy",
        "updateUserStrategy",
        "deleteUserStrategy",
        "shareWithTeams",
        "shareWithClubs"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useViewAsAuth.ts": {
      "path": "src/hooks/useViewAsAuth.ts",
      "purpose": "Custom React hook",
      "imports": [
        "@/contexts/SupabaseAuthContext",
        "@/contexts/RoleViewerContext"
      ],
      "exports": [
        "useViewAsAuth"
      ],
      "database_tables": [],
      "returns": [
        "actualAuth",
        "user",
        "role",
        "viewingRole",
        "roles",
        "_isViewingAs",
        "true",
        "_actualRole",
        "_actualRoles"
      ],
      "dependencies": [],
      "query_keys": []
    },
    "src/hooks/useWallBallWorkouts.ts": {
      "path": "src/hooks/useWallBallWorkouts.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/types/wall-ball"
      ],
      "exports": [
        "useWallBallSeries",
        "useWallBallVariants",
        "useWallBallVariant"
      ],
      "database_tables": [
        "skills_academy_series",
        "skills_academy_workouts",
        "skills_academy_drills",
        "skills_academy_user_progress"
      ],
      "returns": [
        "series",
        "loading",
        "id",
        "series_id",
        "variant_name",
        "variants",
        "groupedVariants",
        "duration",
        "withCoaching",
        "null",
        "withoutCoaching",
        "variant",
        "success",
        "false"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useWordPressAPI.ts": {
      "path": "src/hooks/useWordPressAPI.ts",
      "purpose": "WordPress API Hook - Phase 1 Foundation",
      "imports": [
        "react",
        "@/lib/wordpress/memberpress-client"
      ],
      "exports": [
        "useWordPressAPI",
        "useMembershipStatus"
      ],
      "database_tables": [],
      "returns": [
        "loading",
        "error",
        "checkMembershipStatus",
        "syncUser",
        "bulkSyncUsers",
        "getUserSubscriptions",
        "validateMembership",
        "testConnection",
        "status",
        "refreshStatus"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    },
    "src/hooks/useWorkoutAssignments.ts": {
      "path": "src/hooks/useWorkoutAssignments.ts",
      "purpose": "Custom React hook",
      "imports": [
        "react",
        "@/lib/supabase"
      ],
      "exports": [
        "useWorkoutAssignments"
      ],
      "database_tables": [
        "workout_assignments",
        "workout_completions"
      ],
      "returns": [
        "assignments",
        "completions",
        "loading",
        "error",
        "createAssignment",
        "updateAssignment",
        "recordCompletion",
        "refreshAssignments"
      ],
      "dependencies": [
        "react"
      ],
      "query_keys": []
    }
  },
  "types": {
    "src/types/__tests__/role-types.test.ts": {
      "path": "src/types/__tests__/role-types.test.ts",
      "purpose": "Component or utility",
      "imports": [
        "../database.types",
        "../database"
      ],
      "exports": [],
      "database_tables": []
    },
    "src/types/database.ts": {
      "path": "src/types/database.ts",
      "purpose": "Component or utility",
      "imports": [
        "./database.types"
      ],
      "exports": [
        "PowerlaxDrill",
        "UserDrill",
        "PowerlaxStrategy",
        "UserStrategy",
        "UserRole",
        "DatabaseUser",
        "DatabaseTeam",
        "DatabaseClub",
        "DatabasePractice",
        "DatabasePracticeDrill",
        "DatabaseMedia",
        "SkillsAcademySeries",
        "SkillsAcademyWorkout",
        "SkillsAcademyDrill",
        "SkillsAcademyUserProgress",
        "WallBallDrillLibrary",
        "DatabaseUserPointsWallet",
        "DatabasePointTransaction",
        "DatabaseUserBadge",
        "DatabasePlayerRank",
        "DatabaseTeamMember",
        "DatabaseFamilyAccount",
        "DatabaseFamilyMember",
        "Organization",
        "UserProfile",
        "PracticePlan",
        "PracticePlanDrill"
      ],
      "database_tables": []
    },
    "src/types/database.types.ts": {
      "path": "src/types/database.types.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "UserAccountRole",
        "TeamMemberRole",
        "ClubMemberRole",
        "isUserAccountRole",
        "isTeamMemberRole",
        "isClubMemberRole",
        "ROLE_MAPPING",
        "VALID_USER_ACCOUNT_ROLES",
        "VALID_TEAM_MEMBER_ROLES",
        "VALID_CLUB_MEMBER_ROLES",
        "ROLE_DISPLAY_NAMES",
        "UserRole",
        "AdminRole"
      ],
      "database_tables": []
    },
    "src/types/skills-academy.ts": {
      "path": "src/types/skills-academy.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "SkillsAcademyWorkout",
        "SkillsAcademyDrill",
        "SkillsAcademyQuestion",
        "SkillsAcademyAnswer",
        "SkillsAcademySeries",
        "SkillsAcademyWorkoutNew",
        "SkillsAcademyDrillNew",
        "SkillsAcademyWorkoutDrill",
        "DrillWithWorkoutContext",
        "SkillsAcademyUserProgress",
        "DrillWithProgress",
        "WorkoutSession",
        "GroupedWorkouts",
        "WallBallWorkout",
        "WallBallDrill",
        "WorkoutProgress",
        "QuestionWithAnswers",
        "WorkoutWithQuestions"
      ],
      "database_tables": []
    },
    "src/types/teamPlaybook.ts": {
      "path": "src/types/teamPlaybook.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "TeamPlaybook",
        "TeamPlaybookWithStrategy",
        "SaveToPlaybookData"
      ],
      "database_tables": []
    },
    "src/types/teams.ts": {
      "path": "src/types/teams.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "Club",
        "ClubSettings",
        "ClubBranding",
        "Organization",
        "OrganizationSettings",
        "OrganizationBranding",
        "Team",
        "TeamSettings",
        "UserClubRole",
        "UserOrganizationRole",
        "UserTeamRole",
        "TeamWithHierarchy",
        "UserTeamAccess",
        "CreateClubInput",
        "CreateOrganizationInput",
        "CreateTeamInput",
        "AddUserToTeamInput",
        "AddUserToClubInput",
        "AddUserToOrganizationInput"
      ],
      "database_tables": []
    },
    "src/types/vimeo.ts": {
      "path": "src/types/vimeo.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "VideoMetadata",
        "VimeoConfig",
        "VideoProgress"
      ],
      "database_tables": []
    },
    "src/types/wall-ball.ts": {
      "path": "src/types/wall-ball.ts",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "WallBallSeries",
        "WallBallVariant",
        "WallBallDrill",
        "GroupedVariants"
      ],
      "database_tables": []
    }
  },
  "pages": {
    "src/app/(authenticated)/academy/page.tsx": {
      "path": "src/app/(authenticated)/academy/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "next/link",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "@/contexts/SupabaseAuthContext",
        "@/hooks/useWorkoutAssignments",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "AcademyPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/academy",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "CardContent",
        "Checkbox",
        "Target",
        "Star",
        "Progress",
        "Play",
        "TrendingUp",
        "Trophy",
        "Link",
        "Icon",
        "BookOpen",
        "Clock",
        "ChevronRight"
      ],
      "hooks_used": [
        "useAuth",
        "useWorkoutAssignments",
        "useState"
      ]
    },
    "src/app/(authenticated)/admin/drill-editor/page.tsx": {
      "path": "src/app/(authenticated)/admin/drill-editor/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/contexts/SupabaseAuthContext",
        "lucide-react"
      ],
      "exports": [
        "DrillEditorPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/admin/drill-editor",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2"
      ],
      "hooks_used": [
        "useAuth"
      ]
    },
    "src/app/(authenticated)/admin/management/page.tsx": {
      "path": "src/app/(authenticated)/admin/management/page.tsx",
      "purpose": "Documentation Helper",
      "imports": [
        "react",
        "@/contexts/SupabaseAuthContext",
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "lucide-react",
        "sonner",
        "@/components/admin/management/ManagementTabs",
        "@/components/admin/management/DocumentationHelper"
      ],
      "exports": [
        "ManagementPage"
      ],
      "database_tables": [
        "users"
      ],
      "route": "/(authenticated)/admin/management",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "User",
        "RoleStats",
        "RoleChangeModal",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertCircle",
        "CardDescription",
        "DocumentationHelper",
        "BarChart3",
        "CardContent",
        "Shield",
        "InlineDocumentation",
        "Badge",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Users",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Button",
        "UserCheck",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "DialogFooter",
        "Settings",
        "ManagementTabs"
      ],
      "hooks_used": [
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/admin/role-management/loading.tsx": {
      "path": "src/app/(authenticated)/admin/role-management/loading.tsx",
      "purpose": "Header Skeleton",
      "imports": [],
      "exports": [
        "RoleManagementLoading"
      ],
      "database_tables": [],
      "route": "/(authenticated)/admin/role-management/loading.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/(authenticated)/admin/role-management/page.tsx": {
      "path": "src/app/(authenticated)/admin/role-management/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/contexts/SupabaseAuthContext",
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "RoleManagementPage"
      ],
      "database_tables": [
        "users"
      ],
      "route": "/(authenticated)/admin/role-management",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "User",
        "RoleStats",
        "RoleChangeModal",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertCircle",
        "CardDescription",
        "BarChart3",
        "CardContent",
        "Shield",
        "Badge",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Users",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Button",
        "UserCheck",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "DialogFooter"
      ],
      "hooks_used": [
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/admin/sync/page.tsx": {
      "path": "src/app/(authenticated)/admin/sync/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/table",
        "lucide-react",
        "date-fns",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "AdminSyncPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/admin/sync",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "SyncStatus",
        "Loader2",
        "Badge",
        "Alert",
        "AlertCircle",
        "AlertTitle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Button",
        "RefreshCw",
        "CheckCircle",
        "XCircle",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Upload"
      ],
      "hooks_used": [
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/admin/wp-import-check/page.tsx": {
      "path": "src/app/(authenticated)/admin/wp-import-check/page.tsx",
      "purpose": "Dashboard summary",
      "imports": [
        "react",
        "@/contexts/SupabaseAuthContext",
        "lucide-react"
      ],
      "exports": [
        "WPImportCheckPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/admin/wp-import-check",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Org",
        "Team",
        "MemberRow",
        "Loader2",
        "Stat"
      ],
      "hooks_used": [
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/community/page.tsx": {
      "path": "src/app/(authenticated)/community/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "lucide-react",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "CommunityPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/community",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2",
        "Button",
        "Bell",
        "MessageSquare",
        "Card",
        "CardContent",
        "Icon",
        "CardHeader",
        "CardTitle",
        "MessageCircle",
        "Avatar",
        "AvatarFallback",
        "Badge",
        "Heart",
        "Share2",
        "Calendar",
        "Users",
        "UserPlus"
      ],
      "hooks_used": [
        "useAuth"
      ]
    },
    "src/app/(authenticated)/dashboard/page.tsx": {
      "path": "src/app/(authenticated)/dashboard/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/contexts/SupabaseAuthContext",
        "@/contexts/RoleViewerContext",
        "lucide-react",
        "@/components/dashboards/PlayerDashboard",
        "@/components/dashboards/CoachDashboard",
        "@/components/dashboards/ParentDashboard",
        "@/components/dashboards/DirectorDashboard",
        "@/components/dashboards/AdminDashboard",
        "@/components/dashboards/PublicDashboard"
      ],
      "exports": [
        "DashboardPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/dashboard",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "PlayerDashboard",
        "CoachDashboard",
        "ParentDashboard",
        "DirectorDashboard",
        "AdminDashboard"
      ],
      "hooks_used": [
        "useAuth",
        "useRoleViewer"
      ]
    },
    "src/app/(authenticated)/details/[type]/[id]/page.tsx": {
      "path": "src/app/(authenticated)/details/[type]/[id]/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/lib/supabase",
        "@/components/details/DrillDetails",
        "@/components/details/StrategyDetails"
      ],
      "exports": [],
      "database_tables": [],
      "route": "/(authenticated)/details/:type/:id",
      "type": "server",
      "auth_required": false,
      "components_used": [
        "BaseEntity",
        "DrillDetails",
        "StrategyDetails"
      ],
      "hooks_used": []
    },
    "src/app/(authenticated)/gamification/loading.tsx": {
      "path": "src/app/(authenticated)/gamification/loading.tsx",
      "purpose": "Header with Rank Progress Skeleton",
      "imports": [],
      "exports": [
        "GamificationLoading"
      ],
      "database_tables": [],
      "route": "/(authenticated)/gamification/loading.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/(authenticated)/gamification/page.tsx": {
      "path": "src/app/(authenticated)/gamification/page.tsx",
      "purpose": "Header with Rank Progress",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "lucide-react",
        "next/link",
        "@/hooks/useGamificationData",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "PlayerGamificationPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/gamification",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2",
        "Target",
        "Shield",
        "Zap",
        "Trophy",
        "Star",
        "Gem",
        "Crown",
        "Medal",
        "Progress",
        "Card",
        "CardContent",
        "Flame",
        "Award",
        "TrendingUp",
        "Calendar",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Button",
        "ChevronRight",
        "Link"
      ],
      "hooks_used": [
        "useAuth",
        "useState",
        "useGamificationData"
      ]
    },
    "src/app/(authenticated)/gamification-demo/page.tsx": {
      "path": "src/app/(authenticated)/gamification-demo/page.tsx",
      "purpose": "Overview Tab",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/gamification/DifficultyIndicator",
        "@/components/gamification/StreakCounter",
        "@/lib/gamification/point-calculator",
        "lucide-react"
      ],
      "exports": [
        "GamificationDemo"
      ],
      "database_tables": [],
      "route": "/(authenticated)/gamification-demo",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Drill",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertTitle",
        "AlertDescription",
        "CheckCircle2",
        "CardDescription",
        "DifficultyIndicator",
        "AverageDifficulty",
        "Button",
        "Timer",
        "StreakCounter",
        "Trophy",
        "MilestoneCelebration"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/app/(authenticated)/gamification-showcase/page.tsx": {
      "path": "src/app/(authenticated)/gamification-showcase/page.tsx",
      "purpose": "Background pattern",
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useGamification"
      ],
      "exports": [
        "GamificationShowcase"
      ],
      "database_tables": [],
      "route": "/(authenticated)/gamification-showcase",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Card",
        "PlayerCard",
        "Button",
        "Trophy",
        "Star",
        "Target",
        "Zap",
        "Shield",
        "Badge",
        "RankUpAnimation",
        "BadgeEarnedAnimation"
      ],
      "hooks_used": [
        "useEffect",
        "useGamification",
        "useState"
      ]
    },
    "src/app/(authenticated)/layout.tsx": {
      "path": "src/app/(authenticated)/layout.tsx",
      "purpose": "Admin Role Viewer Tool",
      "imports": [
        "@/contexts/SupabaseAuthContext",
        "@/contexts/SidebarContext",
        "@/components/navigation/BottomNavigation",
        "@/components/navigation/SidebarNavigation",
        "@/components/admin/RoleViewerSelector"
      ],
      "exports": [
        "AuthenticatedLayout"
      ],
      "database_tables": [],
      "route": "/(authenticated)/layout.tsx",
      "type": "client",
      "auth_required": true,
      "components_used": [
        "SidebarProvider",
        "SidebarNavigation",
        "BottomNavigation",
        "RoleViewerSelector",
        "RoleViewerKeyboardHandler"
      ],
      "hooks_used": [
        "useRequireAuth"
      ]
    },
    "src/app/(authenticated)/practiceplan/page.tsx": {
      "path": "src/app/(authenticated)/practiceplan/page.tsx",
      "purpose": "Header",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "PracticePlanPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/practiceplan",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Plus",
        "CardContent",
        "Link",
        "Button",
        "Calendar",
        "MapPin",
        "Clock"
      ],
      "hooks_used": []
    },
    "src/app/(authenticated)/resources/page.tsx": {
      "path": "src/app/(authenticated)/resources/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useViewAsAuth",
        "@/lib/resources-data-provider-real",
        "@/hooks/useResourceFavorites",
        "@/components/ui/checkbox",
        "@/components/resources"
      ],
      "exports": [
        "ResourcesPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/resources",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Resource",
        "FilterState",
        "Loader2",
        "ResourceFilter",
        "ResourceCard",
        "FileText",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Checkbox",
        "Star",
        "BookOpen",
        "Badge",
        "Video",
        "ResourceDetailModal"
      ],
      "hooks_used": [
        "useViewAsAuth",
        "useState",
        "useResourceFavorites",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/skills-academy/animations/page.tsx": {
      "path": "src/app/(authenticated)/skills-academy/animations/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "next/link",
        "@/components/animations/BadgeUnlockCSS",
        "@/components/animations/BadgeCollectionSpring",
        "@/components/animations/SkillTreeSVG",
        "@/components/animations/TeamChallengeRacing"
      ],
      "exports": [
        "AnimationsShowcasePage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/skills-academy/animations",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "BadgeUnlockCSS",
        "Button",
        "Trophy",
        "BadgeCollectionSpring",
        "SkillTreeSVG",
        "TeamChallengeRacing",
        "Link",
        "ArrowLeft",
        "Badge",
        "Sparkles",
        "Zap",
        "Target",
        "Users",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Shield"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/app/(authenticated)/skills-academy/page.tsx": {
      "path": "src/app/(authenticated)/skills-academy/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/components/skills-academy/SkillsAcademyHubEnhanced",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [],
      "route": "/(authenticated)/skills-academy",
      "type": "server",
      "auth_required": false,
      "components_used": [
        "SkillsAcademyHubEnhanced"
      ],
      "hooks_used": []
    },
    "src/app/(authenticated)/skills-academy/workout/[id]/page-broken.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workout/[id]/page-broken.tsx",
      "purpose": "Celebration Header",
      "imports": [
        "next/navigation",
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "next/link",
        "@/hooks/useProgressTracking",
        "@/hooks/usePointsCalculation",
        "@/components/skills-academy/CelebrationAnimation",
        "@/components/skills-academy/WorkoutErrorBoundary",
        "@/hooks/useSkillsAcademyWorkouts",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "@/components/skills-academy/PointExplosion",
        "@/hooks/usePointTypes",
        "@/components/skills-academy/PointCounter",
        "@/components/skills-academy/WorkoutReviewModal"
      ],
      "exports": [
        "WorkoutPage"
      ],
      "database_tables": [
        "wall_ball_drill_library",
        "skills_academy_series",
        "workout_completions"
      ],
      "route": "/(authenticated)/skills-academy/workout/:id/page-broken.tsx",
      "type": "client",
      "auth_required": true,
      "components_used": [
        "Set",
        "HTMLElement",
        "Record",
        "Loader2",
        "Button",
        "Link",
        "CelebrationAnimation",
        "Trophy",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Award",
        "Activity",
        "WorkoutReviewModal",
        "WorkoutErrorBoundary",
        "PointExplosion",
        "ArrowLeft",
        "Progress",
        "PointCounter",
        "Check",
        "PlayCircle",
        "CheckCircle",
        "WorkoutPageContent"
      ],
      "hooks_used": [
        "useParams",
        "useAuth",
        "useState",
        "useWorkoutSession",
        "usePointTypes",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/skills-academy/workout/[id]/page-old.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workout/[id]/page-old.tsx",
      "purpose": "Celebration Animation Overlay",
      "imports": [
        "next/navigation",
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "next/link",
        "@/hooks/useProgressTracking",
        "@/hooks/usePointsCalculation",
        "@/components/skills-academy/CelebrationAnimation",
        "@/components/skills-academy/WorkoutErrorBoundary",
        "@/hooks/useSkillsAcademyWorkouts",
        "@/lib/supabase"
      ],
      "exports": [
        "WorkoutPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/skills-academy/workout/:id/page-old.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Set",
        "Card",
        "CardContent",
        "Activity",
        "Button",
        "Link",
        "CelebrationAnimation",
        "Trophy",
        "CardHeader",
        "CardTitle",
        "Award",
        "Home",
        "ArrowLeft",
        "Badge",
        "Progress",
        "PlayCircle",
        "ChevronLeft",
        "CheckCircle",
        "ChevronRight",
        "WorkoutErrorBoundary",
        "WorkoutPageContent"
      ],
      "hooks_used": [
        "useParams",
        "useEffect",
        "useWorkoutSession",
        "useState"
      ]
    },
    "src/app/(authenticated)/skills-academy/workout/[id]/page-test.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workout/[id]/page-test.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next/navigation"
      ],
      "exports": [
        "WorkoutTestPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/skills-academy/workout/:id/page-test.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [],
      "hooks_used": [
        "useParams"
      ]
    },
    "src/app/(authenticated)/skills-academy/workout/[id]/page.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workout/[id]/page.tsx",
      "purpose": "5-ZONE CONTAINER ARCHITECTURE WITH STICKY FOOTER",
      "imports": [
        "next/navigation",
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react",
        "next/link",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "@/components/skills-academy/PointExplosion",
        "@/hooks/usePointTypes",
        "@/components/skills-academy/PointCounter",
        "@/components/skills-academy/WorkoutReviewModal",
        "@/components/skills-academy/CelebrationAnimation",
        "@/components/skills-academy/WorkoutErrorBoundary",
        "@/hooks/useSkillsAcademyWorkouts"
      ],
      "exports": [
        "WorkoutPage"
      ],
      "database_tables": [
        "wall_ball_drill_library",
        "skills_academy_series"
      ],
      "route": "/(authenticated)/skills-academy/workout/:id",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Set",
        "HTMLElement",
        "Record",
        "Loader2",
        "Button",
        "Link",
        "CelebrationAnimation",
        "Trophy",
        "Card",
        "CardContent",
        "WorkoutReviewModal",
        "WorkoutErrorBoundary",
        "PointExplosion",
        "ArrowLeft",
        "PointCounter",
        "Check",
        "Progress",
        "PlayCircle",
        "CheckCircle",
        "WorkoutPageContent"
      ],
      "hooks_used": [
        "useParams",
        "useAuth",
        "useWorkoutSession",
        "usePointTypes",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/skills-academy/workouts/page-full.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workouts/page-full.tsx",
      "purpose": "Track Cards Grid",
      "imports": [
        "react",
        "next/navigation",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "lucide-react",
        "@/lib/supabase"
      ],
      "exports": [
        "SkillsAcademyWorkoutsPage"
      ],
      "database_tables": [
        "skills_academy_series",
        "skills_academy_workouts"
      ],
      "route": "/(authenticated)/skills-academy/workouts/page-full.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Track",
        "Workout",
        "Series",
        "Zap",
        "Target",
        "Users",
        "Shield",
        "PlayCircle",
        "Card",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Button",
        "X",
        "Loader2",
        "Clock"
      ],
      "hooks_used": [
        "useRouter",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/skills-academy/workouts/page.tsx": {
      "path": "src/app/(authenticated)/skills-academy/workouts/page.tsx",
      "purpose": "Desktop Content",
      "imports": [
        "react",
        "next/navigation",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "lucide-react",
        "@/lib/supabase",
        "@/types/wall-ball",
        "@/contexts/SupabaseAuthContext"
      ],
      "exports": [
        "SkillsAcademyWorkoutsPage"
      ],
      "database_tables": [
        "skills_academy_series",
        "skills_academy_workouts"
      ],
      "route": "/(authenticated)/skills-academy/workouts",
      "type": "client",
      "auth_required": true,
      "components_used": [
        "Track",
        "Workout",
        "Series",
        "Loader2",
        "Zap",
        "Target",
        "Users",
        "Shield",
        "Circle",
        "PlayCircle",
        "Button",
        "Sparkles",
        "Card",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle"
      ],
      "hooks_used": [
        "useRouter",
        "useAuth",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/strategies/page.tsx": {
      "path": "src/app/(authenticated)/strategies/page.tsx",
      "purpose": "Search and Filter",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "lucide-react",
        "next/link",
        "@/lib/supabase",
        "@/hooks/useUserStrategies",
        "@/contexts/SupabaseAuthContext",
        "@/components/practice-planner/modals/VideoModal",
        "@/components/practice-planner/modals/LacrosseLabModal"
      ],
      "exports": [
        "StrategiesPage"
      ],
      "database_tables": [
        "powlax_strategies"
      ],
      "route": "/(authenticated)/strategies",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Strategy",
        "Loader2",
        "Target",
        "Shield",
        "Zap",
        "Users",
        "Button",
        "Search",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "ScrollArea",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "PlayCircle",
        "BookOpen",
        "VideoModal",
        "LacrosseLabModal",
        "CreateStrategyModal"
      ],
      "hooks_used": [
        "useAuth",
        "useUserStrategies",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/teams/[teamId]/dashboard/page.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/dashboard/page.tsx",
      "purpose": "Mobile-optimized team header with emergency contacts",
      "imports": [
        "next/navigation",
        "@/hooks/useTeams",
        "@/hooks/useTeamDashboard",
        "@/contexts/SupabaseAuthContext",
        "lucide-react",
        "@/components/teams/dashboard/TeamHeader",
        "@/components/teams/dashboard/CoachQuickActions",
        "@/components/teams/dashboard/UpcomingSchedule",
        "@/components/teams/dashboard/TeamRoster",
        "@/components/teams/dashboard/ProgressOverview",
        "@/components/teams/dashboard/RecentActivity",
        "@/components/teams/dashboard/ParentView",
        "@/components/teams/dashboard/PlayerView",
        "@/components/teams/dashboard/TeamPlaybookSection",
        "@/components/ui/button",
        "next/link"
      ],
      "exports": [
        "TeamDashboardPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/teams/:teamId/dashboard",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2",
        "AlertCircle",
        "Link",
        "Button",
        "PlayerView",
        "TeamHeader",
        "ParentView",
        "CoachQuickActions",
        "UpcomingSchedule",
        "TeamRoster",
        "TeamPlaybookSection",
        "ProgressOverview",
        "RecentActivity"
      ],
      "hooks_used": [
        "useParams",
        "useAuth",
        "useTeam",
        "useTeamDashboard"
      ]
    },
    "src/app/(authenticated)/teams/[teamId]/hq/page.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/hq/page.tsx",
      "purpose": "Team Header",
      "imports": [
        "next/navigation",
        "@/hooks/useTeams",
        "next/link",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "TeamHQPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/teams/:teamId/hq",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2",
        "AlertCircle",
        "Link",
        "Button",
        "Badge",
        "Settings",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Icon",
        "ChevronRight",
        "CardDescription"
      ],
      "hooks_used": [
        "useParams",
        "useTeam"
      ]
    },
    "src/app/(authenticated)/teams/[teamId]/playbook/page.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/playbook/page.tsx",
      "purpose": "Navigation Header",
      "imports": [
        "react",
        "next/navigation",
        "@/components/team-playbook/TeamPlaybook",
        "@/lib/supabase",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "TeamPlaybookPage"
      ],
      "database_tables": [
        "team_teams"
      ],
      "route": "/(authenticated)/teams/:teamId/playbook",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Team",
        "Button",
        "ArrowLeft",
        "TeamPlaybook"
      ],
      "hooks_used": [
        "useParams",
        "useRouter",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/teams/[teamId]/practiceplan/error.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/practiceplan/error.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "PracticePlannerError"
      ],
      "database_tables": [],
      "route": "/(authenticated)/teams/:teamId/practiceplan/error.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "AlertCircle",
        "Button"
      ],
      "hooks_used": [
        "useEffect"
      ]
    },
    "src/app/(authenticated)/teams/[teamId]/practiceplan/loading.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/practiceplan/loading.tsx",
      "purpose": "Header Skeleton",
      "imports": [],
      "exports": [
        "PracticePlansLoading"
      ],
      "database_tables": [],
      "route": "/(authenticated)/teams/:teamId/practiceplan/loading.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/(authenticated)/teams/[teamId]/practiceplan/page.tsx": {
      "path": "src/app/(authenticated)/teams/[teamId]/practiceplan/page.tsx",
      "purpose": "Header - Scrolls with content",
      "imports": [
        "react",
        "next/navigation",
        "lucide-react",
        "@/components/practice-planner/SidebarLibrary",
        "@/components/practice-planner/StrategyCard",
        "@/components/ui/accordion",
        "@/components/practice-planner/PracticeTimelineWithParallel",
        "@/components/practice-planner/PracticeDurationBar",
        "@/components/practice-planner/modals/SavePracticeModal",
        "@/components/practice-planner/modals/LoadPracticeModal",
        "@/components/practice-planner/modals/AddCustomStrategiesModal",
        "@/components/practice-planner/modals/StrategiesListModal",
        "@/components/practice-planner/PrintablePracticePlan",
        "@/components/practice-planner/PracticeTemplateSelector",
        "@/components/practice-planner/PracticeScheduleCard",
        "@/components/practice-planner/ActiveStrategiesSection",
        "@/components/practice-planner/modals/StudyDrillModal",
        "@/components/practice-planner/modals/StudyStrategyModal",
        "@/hooks/usePracticePlans",
        "@/hooks/useDrills",
        "@/hooks/usePrint",
        "@/hooks/useStrategies",
        "@/contexts/SupabaseAuthContext",
        "sonner"
      ],
      "exports": [
        "PracticePlansPage"
      ],
      "database_tables": [],
      "route": "/(authenticated)/teams/:teamId/practiceplan",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "PracticePlanTimeSlot",
        "NodeJS",
        "Plus",
        "FolderOpen",
        "Target",
        "Save",
        "Printer",
        "RefreshCw",
        "ActiveStrategiesSection",
        "PracticeScheduleCard",
        "PracticeTimelineWithParallel",
        "SidebarLibrary",
        "SavePracticeModal",
        "LoadPracticeModal",
        "PracticeTemplateSelector",
        "AddCustomStrategiesModal",
        "StrategiesListModal",
        "StudyDrillModal",
        "StudyStrategyModal",
        "PrintablePracticePlan"
      ],
      "hooks_used": [
        "useParams",
        "useAuth",
        "usePracticePlans",
        "useDrills",
        "usePrint",
        "useStrategies",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/teams/page-broken.tsx": {
      "path": "src/app/(authenticated)/teams/page-broken.tsx",
      "purpose": "Real Roster Section",
      "imports": [
        "@/hooks/useTeams",
        "next/navigation",
        "next/link",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/contexts/SupabaseAuthContext",
        "@/lib/supabase",
        "react"
      ],
      "exports": [
        "TeamsPage"
      ],
      "database_tables": [
        "team_members"
      ],
      "route": "/(authenticated)/teams/page-broken.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Record",
        "Loader2",
        "AlertCircle",
        "Users",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "CardContent",
        "Button",
        "MessageCircle",
        "BarChart3",
        "Link",
        "ChevronRight",
        "TeamsPageContent"
      ],
      "hooks_used": [
        "useRouter",
        "useAuth",
        "useTeams",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/teams/page.tsx": {
      "path": "src/app/(authenticated)/teams/page.tsx",
      "purpose": "Header",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link",
        "@/hooks/useTeams",
        "@/lib/supabase"
      ],
      "exports": [
        "TeamsPage"
      ],
      "database_tables": [
        "teams"
      ],
      "route": "/(authenticated)/teams",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "TeamWithMemberCount",
        "Loader2",
        "Button",
        "Users",
        "Plus",
        "Card",
        "CardHeader",
        "CardTitle",
        "ChevronRight",
        "CardContent",
        "Link",
        "Activity"
      ],
      "hooks_used": [
        "useTeams",
        "useState",
        "useEffect"
      ]
    },
    "src/app/(authenticated)/test-gamification/page.tsx": {
      "path": "src/app/(authenticated)/test-gamification/page.tsx",
      "purpose": "Quick Test Buttons",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/gamification/DifficultyIndicator",
        "@/components/gamification/StreakCounter",
        "@/lib/gamification/point-calculator"
      ],
      "exports": [
        "TestGamification"
      ],
      "database_tables": [],
      "route": "/(authenticated)/test-gamification",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "DifficultyIndicator",
        "StreakCounter"
      ],
      "hooks_used": [
        "useState"
      ]
    },
    "src/app/(authenticated)/test-supabase/page.tsx": {
      "path": "src/app/(authenticated)/test-supabase/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/lib/supabase",
        "@/contexts/SupabaseAuthContext",
        "lucide-react"
      ],
      "exports": [
        "TestSupabasePage"
      ],
      "database_tables": [
        "powlax_drills"
      ],
      "route": "/(authenticated)/test-supabase",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Loader2"
      ],
      "hooks_used": [
        "useAuth",
        "useEffect"
      ]
    },
    "src/app/ClientProviders.tsx": {
      "path": "src/app/ClientProviders.tsx",
      "purpose": "Component or utility",
      "imports": [
        "@/contexts/ThemeContext",
        "@/contexts/OnboardingContext",
        "@/providers/query-provider",
        "@/contexts/SupabaseAuthContext",
        "@/contexts/RoleViewerContext",
        "@/contexts/SidebarContext",
        "@/components/providers/ToasterProvider"
      ],
      "exports": [
        "ClientProviders"
      ],
      "database_tables": [],
      "route": "/ClientProviders.tsx",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "ThemeProvider",
        "OnboardingProvider",
        "SidebarProvider",
        "QueryProvider",
        "SupabaseAuthProvider",
        "RoleViewerProvider",
        "ToasterProvider"
      ],
      "hooks_used": []
    },
    "src/app/api/admin/wp-import-check/route.ts": {
      "path": "src/app/api/admin/wp-import-check/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@supabase/supabase-js"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "clubs",
        "teams",
        "team_members",
        "users"
      ],
      "route": "/api/admin/wp-import-check",
      "type": "server",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/debug/auth/route.ts": {
      "path": "src/app/api/debug/auth/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase-server",
        "next/headers"
      ],
      "exports": [],
      "database_tables": [],
      "route": "/api/debug/auth",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/email/send-magic-link/route.ts": {
      "path": "src/app/api/email/send-magic-link/route.ts",
      "purpose": "const wordpressResponse = await fetch(`${process.env.WORDPRESS_API_URL}/wp-json/powlax/v1/send-email`, {",
      "imports": [
        "next/server"
      ],
      "exports": [],
      "database_tables": [],
      "route": "/api/email/send-magic-link",
      "type": "server",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/gamipress/sync/route.ts": {
      "path": "src/app/api/gamipress/sync/route.ts",
      "purpose": "GamiPress Sync API Endpoint",
      "imports": [
        "next/server",
        "../../../../../scripts/sync-gamipress",
        "@supabase/supabase-js"
      ],
      "exports": [],
      "database_tables": [
        "gamipress_sync_log"
      ],
      "route": "/api/gamipress/sync",
      "type": "server",
      "auth_required": false,
      "components_used": [
        "NextResponse"
      ],
      "hooks_used": []
    },
    "src/app/api/memberpress/webhook/route.ts": {
      "path": "src/app/api/memberpress/webhook/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@supabase/supabase-js",
        "crypto"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "users",
        "team_teams",
        "registration_links",
        "club_organizations",
        "webhook_events",
        "membership_products",
        "membership_entitlements",
        "team_members"
      ],
      "route": "/api/memberpress/webhook",
      "type": "server",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/sync/full/route.ts": {
      "path": "src/app/api/sync/full/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "route": "/api/sync/full",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/sync/organizations/route.ts": {
      "path": "src/app/api/sync/organizations/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "route": "/api/sync/organizations",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/sync/status/route.ts": {
      "path": "src/app/api/sync/status/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [
        "dynamic"
      ],
      "database_tables": [
        "clubs",
        "teams",
        "user_team_roles"
      ],
      "route": "/api/sync/status",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/sync/teams/route.ts": {
      "path": "src/app/api/sync/teams/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "route": "/api/sync/teams",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/sync/users/route.ts": {
      "path": "src/app/api/sync/users/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/wordpress-team-sync",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "users"
      ],
      "route": "/api/sync/users",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/teams/[teamId]/route.ts": {
      "path": "src/app/api/teams/[teamId]/route.ts",
      "purpose": "API route for team operations",
      "imports": [
        "next/server",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "teams"
      ],
      "route": "/api/teams/:teamId",
      "type": "server",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/test/supabase-connection/route.ts": {
      "path": "src/app/api/test/supabase-connection/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase"
      ],
      "exports": [],
      "database_tables": [
        "profiles"
      ],
      "route": "/api/test/supabase-connection",
      "type": "server",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/api/wordpress/memberpress/route.ts": {
      "path": "src/app/api/wordpress/memberpress/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "next/headers"
      ],
      "exports": [],
      "database_tables": [],
      "route": "/api/wordpress/memberpress",
      "type": "server",
      "auth_required": false,
      "components_used": [
        "NextResponse"
      ],
      "hooks_used": []
    },
    "src/app/api/workouts/complete/route.ts": {
      "path": "src/app/api/workouts/complete/route.ts",
      "purpose": "Fetch drills by IDs from appropriate table",
      "imports": [
        "next/server",
        "@/lib/supabase-server",
        "@/lib/gamification/point-calculator",
        "@/lib/gamification/streak-manager"
      ],
      "exports": [],
      "database_tables": [
        "powlax_drills",
        "skills_academy_drills",
        "workout_completions",
        "points_transactions_powlax",
        "user_points_balance_powlax",
        "badges_powlax",
        "user_badge_progress_powlax"
      ],
      "route": "/api/workouts/complete",
      "type": "server",
      "auth_required": true,
      "components_used": [
        "Drill"
      ],
      "hooks_used": []
    },
    "src/app/api/workouts/progress/route.ts": {
      "path": "src/app/api/workouts/progress/route.ts",
      "purpose": "API route handler",
      "imports": [
        "next/server",
        "@/lib/supabase-server"
      ],
      "exports": [],
      "database_tables": [
        "skills_academy_user_progress",
        "user_points_balance_powlax",
        "skills_academy_user_streaks"
      ],
      "route": "/api/workouts/progress",
      "type": "server",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/direct-login/page.tsx": {
      "path": "src/app/direct-login/page.tsx",
      "purpose": "Show logged-in status if user is already authenticated",
      "imports": [
        "react",
        "next/navigation",
        "@/contexts/SupabaseAuthContext",
        "@/components/ui/button",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "DirectLoginPage"
      ],
      "database_tables": [],
      "route": "/direct-login",
      "type": "client",
      "auth_required": true,
      "components_used": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "Mail",
        "AlertCircle",
        "Loader2"
      ],
      "hooks_used": [
        "useState",
        "useRouter",
        "useAuth",
        "useEffect"
      ]
    },
    "src/app/layout.tsx": {
      "path": "src/app/layout.tsx",
      "purpose": "Component or utility",
      "imports": [
        "next",
        "next/font/google",
        "./ClientProviders"
      ],
      "exports": [
        "metadata",
        "viewport",
        "RootLayout"
      ],
      "database_tables": [],
      "route": "/layout.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [
        "ClientProviders"
      ],
      "hooks_used": []
    },
    "src/app/offline/page.tsx": {
      "path": "src/app/offline/page.tsx",
      "purpose": "Offline Icon",
      "imports": [
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "OfflinePage"
      ],
      "database_tables": [],
      "route": "/offline",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "WifiOff",
        "FileText",
        "Clock",
        "RefreshCw",
        "Link"
      ],
      "hooks_used": []
    },
    "src/app/page.tsx": {
      "path": "src/app/page.tsx",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "Home"
      ],
      "database_tables": [],
      "route": "/page.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/print-test/loading.tsx": {
      "path": "src/app/print-test/loading.tsx",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "Loading"
      ],
      "database_tables": [],
      "route": "/print-test/loading.tsx",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/print-test/page.tsx": {
      "path": "src/app/print-test/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/practice-planner/PrintablePracticePlan",
        "@/hooks/usePrint"
      ],
      "exports": [
        "PrintTestPage"
      ],
      "database_tables": [],
      "route": "/print-test",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "PrintablePracticePlan"
      ],
      "hooks_used": [
        "usePrint",
        "useState"
      ]
    },
    "src/app/register/[token]/page.tsx": {
      "path": "src/app/register/[token]/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react"
      ],
      "exports": [
        "RegisterWithTokenPage"
      ],
      "database_tables": [],
      "route": "/register/:token",
      "type": "client",
      "auth_required": false,
      "components_used": [],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/app/simple-test/page.tsx": {
      "path": "src/app/simple-test/page.tsx",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "SimpleTest"
      ],
      "database_tables": [],
      "route": "/simple-test",
      "type": "mixed",
      "auth_required": false,
      "components_used": [],
      "hooks_used": []
    },
    "src/app/skills-academy-public/page.tsx": {
      "path": "src/app/skills-academy-public/page.tsx",
      "purpose": "Hero Section",
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "lucide-react",
        "next/link",
        "@/lib/supabase"
      ],
      "exports": [
        "PublicSkillsAcademyPage"
      ],
      "database_tables": [
        "skills_academy_workouts"
      ],
      "route": "/skills-academy-public",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "WorkoutPreview",
        "Badge",
        "Button",
        "Link",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Clock",
        "Users",
        "ChevronRight",
        "Award",
        "TrendingUp",
        "Star"
      ],
      "hooks_used": [
        "useState",
        "useEffect"
      ]
    },
    "src/app/test-animations/page.tsx": {
      "path": "src/app/test-animations/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "@/components/animations/OptimizedAnimationShowcase"
      ],
      "exports": [
        "TestAnimations"
      ],
      "database_tables": [],
      "route": "/test-animations",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Suspense",
        "OptimizedAnimationShowcase"
      ],
      "hooks_used": []
    },
    "src/app/test-cross-domain/page.tsx": {
      "path": "src/app/test-cross-domain/page.tsx",
      "purpose": "Component or utility",
      "imports": [
        "react",
        "next/link",
        "@/components/ui/button"
      ],
      "exports": [
        "TestCrossDomainPage"
      ],
      "database_tables": [],
      "route": "/test-cross-domain",
      "type": "client",
      "auth_required": false,
      "components_used": [
        "Link",
        "Button"
      ],
      "hooks_used": [
        "useEffect"
      ]
    },
    "src/app/test-practice-planner/page.tsx": {
      "path": "src/app/test-practice-planner/page.tsx",
      "purpose": "Component or utility",
      "imports": [],
      "exports": [
        "TestPracticePlanner"
      ],
      "database_tables": [],
      "route": "/test-practice-planner",
      "type": "client",
      "auth_required": true,
      "components_used": [],
      "hooks_used": []
    }
  },
  "contracts": {
    "active_contracts": {
      "PRACTICE_PLANNER_DEVELOPMENT_CONTRACT.md": "POWLAX Practice Planner Development Contract",
      "codebase-indexing-contract.yaml": "Documentation file",
      "component---create-contract-1755207670739.yaml": "Documentation file",
      "enhanced-codebase-indexing-contract.yaml": "Documentation file",
      "role-standardization-migration-001.yaml": "(all admin components)"
    },
    "master_contracts": {}
  },
  "documentation": {
    "critical_reads": {
      "AI_FRAMEWORK_ERROR_PREVENTION.md": "AI Framework Error Prevention Guide",
      "CLAUDE.md": "CLAUDE.md",
      "README.md": "POWLAX - Modern Lacrosse Training Platform"
    },
    "component_docs": {
      "practice-planner/README.md": "🏟️ **POWLAX Practice Planner Components**",
      "practice-planner/claude.md": "Claude Context: Practice Planner Enhanced",
      "skills-academy/README.md": "🎓 **POWLAX Skills Academy Components**",
      "skills-academy/claude.md": "Claude Context: Skills Academy",
      "ui/claude.md": "Claude Context: UI Components (Shadcn/UI)"
    }
  }
}